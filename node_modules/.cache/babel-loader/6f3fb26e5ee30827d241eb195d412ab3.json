{"ast":null,"code":"import Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport store from '../store';\nVue.use(VueRouter);\nconst router = new VueRouter({\n  mode: 'history',\n  base: process.env.BASE_URL,\n\n  scrollBehavior() {\n    return {\n      x: 0,\n      y: 0\n    };\n  },\n\n  routes: [{\n    path: '/',\n    name: 'home',\n    component: () => import('@/views/Home.vue'),\n    meta: {\n      layout: 'full',\n      pageTitle: 'Home',\n      breadcrumb: [{\n        text: 'Home',\n        active: true\n      }]\n    }\n  }, {\n    path: '/coffee',\n    name: 'coffee',\n    component: () => import('@core/layouts/components/Coffee.vue'),\n    meta: {\n      pageTitle: 'Donation',\n      breadcrumb: [{\n        text: 'Buy me a cup of coffee!',\n        active: false\n      }]\n    }\n  }, {\n    path: '/wallet/accounts',\n    alias: '/wallet',\n    name: 'accounts',\n    component: () => import('@/views/WalletAccounts.vue'),\n    meta: {\n      pageTitle: 'Accounts',\n      breadcrumb: [{\n        text: 'Accounts',\n        active: true\n      }]\n    }\n  }, {\n    path: '/wallet/import',\n    name: 'accounts-import',\n    component: () => import('@/views/WalletAccountImportAddress.vue'),\n    meta: {\n      pageTitle: 'Accounts',\n      breadcrumb: [{\n        text: 'Import',\n        active: true\n      }]\n    }\n  }, {\n    path: '/wallet/delegations',\n    name: 'delegations',\n    component: () => import('@/views/WalletDelegations.vue'),\n    meta: {\n      pageTitle: 'My Delegations',\n      breadcrumb: [{\n        text: 'Wallet'\n      }, {\n        text: 'My Delegations'\n      }]\n    }\n  }, {\n    path: '/wallet/transactions',\n    name: 'mytransactions',\n    component: () => import('@/views/WalletTransactions.vue'),\n    meta: {\n      pageTitle: 'Transaction History',\n      breadcrumb: [{\n        text: 'Wallet'\n      }, {\n        text: 'Transaction History'\n      }]\n    }\n  }, {\n    path: '/wallet/votes',\n    name: 'myVotes',\n    component: () => import('@/views/WalletVotes.vue'),\n    meta: {\n      pageTitle: 'My Votes',\n      breadcrumb: [{\n        text: 'Wallet'\n      }, {\n        text: 'My Votes'\n      }]\n    }\n  }, // chain modules\n  {\n    path: '/:chain/',\n    name: 'dashboard',\n    alias: '/:chain',\n    component: () => import('@/views/Dashboard.vue'),\n    meta: {\n      pageTitle: 'Dashboard',\n      breadcrumb: [{\n        text: 'Dashboard',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/parameters',\n    name: 'parameters',\n    component: () => import('@/views/Parameters.vue'),\n    meta: {\n      pageTitle: 'Parameters',\n      breadcrumb: [{\n        text: 'Parameters',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/statesync',\n    name: 'statesync',\n    component: () => import('@/views/StateSync.vue'),\n    meta: {\n      pageTitle: 'State Sync',\n      breadcrumb: [{\n        text: 'State Synchronization',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/uptime',\n    name: 'uptime',\n    component: () => import('@/views/Uptime.vue'),\n    meta: {\n      pageTitle: 'Uptime',\n      breadcrumb: [{\n        text: 'Uptime',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/uptime/my',\n    name: 'myuptime',\n    component: () => import('@/views/UptimeMyValidators.vue'),\n    meta: {\n      pageTitle: 'Uptime',\n      breadcrumb: [{\n        text: 'Uptime',\n        active: true\n      }, {\n        text: 'My Validators',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/account/:address',\n    name: 'chain-account',\n    component: () => import('@/views/WalletAccountDetail.vue'),\n    meta: {\n      pageTitle: 'Accounts',\n      breadcrumb: [{\n        text: 'Accounts',\n        active: true\n      }, {\n        text: 'Detail',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/account/:address/receive',\n    name: 'chain-receive',\n    component: () => import('@/views/WalletAccountReceive.vue'),\n    meta: {\n      pageTitle: 'Accounts',\n      breadcrumb: [{\n        text: 'Accounts',\n        active: true\n      }, {\n        text: 'Pay Me',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/staking',\n    name: 'staking',\n    component: () => import('@/views/Staking.vue'),\n    meta: {\n      pageTitle: 'Staking',\n      breadcrumb: [{\n        text: 'Staking',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/staking/:address',\n    name: 'staking-valiator',\n    component: () => import('@/views/StakingValidator.vue'),\n    meta: {\n      pageTitle: 'Staking Validator',\n      breadcrumb: route => [{\n        text: 'Staking',\n        to: `/${route.params.chain}/staking`\n      }, {\n        text: 'Validator',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/gov',\n    name: 'governance',\n    component: () => import('@/views/Governance.vue'),\n    meta: {\n      pageTitle: 'Governance',\n      breadcrumb: [{\n        text: 'Governance',\n        active: true\n      }, {\n        text: 'Proposals',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/gov/:proposalid',\n    name: 'proposal',\n    component: () => import('@/views/GovernanceProposalView.vue'),\n    meta: {\n      pageTitle: 'Governance',\n      breadcrumb: [{\n        text: 'Governance',\n        active: true\n      }, {\n        text: 'Proposal Detail',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/blocks',\n    name: 'blocks',\n    component: () => import('@/views/Blocks.vue'),\n    meta: {\n      pageTitle: 'Blocks',\n      breadcrumb: [{\n        text: 'Blocks',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/blocks/:height',\n    name: 'block',\n    component: () => import('@/views/Block.vue'),\n    meta: {\n      pageTitle: 'Block',\n      breadcrumb: route => [{\n        text: 'Blocks',\n        to: `/${route.params.chain}/blocks`\n      }, {\n        text: 'Block',\n        active: true\n      }]\n    }\n  }, {\n    path: '/:chain/tx/:hash',\n    name: 'transaction',\n    component: () => import('@/views/Transaction.vue'),\n    meta: {\n      pageTitle: 'Transaction',\n      breadcrumb: [{\n        text: 'Transaction',\n        active: true\n      }]\n    }\n  }, // custom modules for specified chains\n  // 1. cosmos\n  {\n    path: '/:chain/cosmos/trade',\n    name: 'gravity',\n    component: () => import('@/views/GravityPool.vue'),\n    meta: {\n      pageTitle: 'Gravity Pools',\n      breadcrumb: [{\n        text: 'Gravity',\n        active: true\n      }]\n    }\n  }, // 2. OSMOSIS\n  {\n    path: '/:chain/osmosis/trade/:poolid?',\n    name: 'osmosis-trade',\n    component: () => import('@/views/OsmosisTrade.vue'),\n    meta: {\n      pageTitle: 'Classic Trade',\n      breadcrumb: [{\n        text: 'DEX',\n        active: true\n      }, {\n        text: 'Classic Trade',\n        active: true\n      }]\n    }\n  }, // common modules\n  {\n    path: '/:chain/consensus',\n    name: 'consensus',\n    component: () => import('@/views/ConsensusStates.vue'),\n    meta: {\n      pageTitle: 'Consensus State',\n      breadcrumb: [{\n        text: 'Consensus State',\n        active: true\n      }]\n    }\n  }, {\n    path: '/error/error-404',\n    name: 'error-404',\n    component: () => import('@/views/error/Error404.vue'),\n    meta: {\n      layout: 'full'\n    }\n  }, {\n    path: '/error/chain-not-exists',\n    name: 'chain-404',\n    component: () => import('@/views/error/ChainNotExist.vue'),\n    meta: {\n      layout: 'full'\n    }\n  }, {\n    path: '/index.php',\n    redirect: '/'\n  }, {\n    path: '*',\n    redirect: '/error/error-404'\n  }]\n});\nrouter.beforeEach((to, from, next) => {\n  const configs = JSON.parse(localStorage.getItem('chains'));\n\n  if (configs && to.params.chain) {\n    const c = String(to.params.chain).toLowerCase();\n    const conf = Object.values(configs).find(i => i.chain_name === c || i.alias === c);\n\n    if (conf) {\n      store.commit('select', {\n        chain_name: conf.chain_name\n      });\n      next();\n    } else {\n      next({\n        name: 'chain-404'\n      });\n    }\n  } else {\n    next();\n  }\n}); // ? For splash screen\n// Remove afterEach hook if you are not using splash screen\n\nrouter.afterEach(() => {\n  // Remove initial loading\n  const appLoading = document.getElementById('loading-bg');\n\n  if (appLoading) {\n    appLoading.style.display = 'none';\n  }\n});\nexport default router;","map":null,"metadata":{},"sourceType":"module"}