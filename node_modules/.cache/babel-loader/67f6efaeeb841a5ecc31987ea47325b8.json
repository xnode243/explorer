{"ast":null,"code":"import _defineProperty from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { ScatterChart } from 'echarts/charts';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport VChart, { THEME_KEY } from 'vue-echarts';\nimport { chartColors, formatNumber } from '@/libs/utils';\nuse([CanvasRenderer, ScatterChart, TitleComponent, TooltipComponent, LegendComponent]);\nexport default {\n  name: 'AssetScatter',\n  components: {\n    VChart: VChart\n  },\n  provide: _defineProperty({}, THEME_KEY, 'light'),\n  props: {\n    items: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  computed: {\n    option: function option() {\n      var colors = chartColors();\n      var series = this.items.filter(function (x) {\n        return x[1] > 0;\n      }).map(function (item, index) {\n        return {\n          name: item[3],\n          data: [item],\n          type: 'scatter',\n          symbolSize: function symbolSize(data) {\n            var r = Math.log(data[2]) * 8;\n            return r < 15 ? 15 : r;\n          },\n          emphasis: {\n            focus: 'series',\n            label: {\n              show: true,\n              formatter: function formatter(param) {\n                return \"\".concat(param.data[3], \", $\").concat(parseFloat(param.data[2]).toFixed(2));\n              },\n              position: 'top'\n            }\n          },\n          itemStyle: {\n            shadowBlur: 10,\n            shadowColor: 'rgba(120, 36, 50, 0.5)',\n            shadowOffsetY: 5,\n            color: index > colors.length ? colors[0] : colors[index]\n          }\n        };\n      });\n      var assets = this.items.filter(function (x) {\n        return x[1] > 0;\n      }).map(function (x) {\n        return x[3];\n      });\n      return {\n        title: {\n          text: ''\n        },\n        legend: {\n          scroll: 'scroll',\n          data: assets,\n          textStyle: {\n            color: '#aaa'\n          },\n          top: 'top'\n        },\n        grid: {\n          top: \"\".concat(assets.length > 30 ? 30 : assets.length + 20, \"%\")\n        },\n        // */\n        xAxis: {\n          name: 'Qty',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n            formatter: function formatter(param) {\n              return formatNumber(param, true, 0);\n            }\n          }\n        },\n        yAxis: {\n          name: 'Value',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n            formatter: function formatter(param) {\n              return formatNumber(param, true, 0);\n            }\n          },\n          scale: true\n        },\n        series: series\n      };\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}