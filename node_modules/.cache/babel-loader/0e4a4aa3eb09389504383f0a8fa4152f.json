{"ast":null,"code":"import \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable global-require */\nimport { BLink, BAvatar, BRow, BCol, BCard, BCardText, BCardTitle, BDropdown, BDropdownItem } from 'bootstrap-vue';\nimport Ripple from 'vue-ripple-directive';\nimport VuexyLogo from '@core/layouts/components/Logo.vue';\nimport store from '@/store/index';\nimport { timeIn, toDay, getLocalChains } from '@/libs/utils';\nimport AppFooter from '@/@core/layouts/components/AppFooter.vue';\nimport FullHeader from './components/FullHeader.vue';\nexport default {\n  components: {\n    BLink: BLink,\n    BAvatar: BAvatar,\n    BRow: BRow,\n    BCol: BCol,\n    BCard: BCard,\n    BCardText: BCardText,\n    BCardTitle: BCardTitle,\n    BDropdown: BDropdown,\n    BDropdownItem: BDropdownItem,\n    VuexyLogo: VuexyLogo,\n    AppFooter: AppFooter,\n    FullHeader: FullHeader\n  },\n  directives: {\n    Ripple: Ripple\n  },\n  data: function data() {\n    var chains = this.$store.state.chains.config;\n    return {\n      chains: chains,\n      downImg: require('@/assets/images/pages/under-maintenance.svg')\n    };\n  },\n  computed: {\n    imgUrl: function imgUrl() {\n      if (store.state.appConfig.layout.skin === 'dark') {\n        // eslint-disable-next-line vue/no-side-effects-in-computed-properties\n        this.downImg = require('@/assets/images/pages/under-maintenance-dark.svg');\n        return this.downImg;\n      }\n\n      return this.downImg;\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    var keys = Object.keys(getLocalChains());\n\n    if (keys.length === 1) {\n      this.$router.push(\"/\".concat(keys[0]));\n    }\n  },\n  methods: {\n    fetch: function (_fetch) {\n      function fetch(_x) {\n        return _fetch.apply(this, arguments);\n      }\n\n      fetch.toString = function () {\n        return _fetch.toString();\n      };\n\n      return fetch;\n    }(function (k) {\n      var _this = this;\n\n      var chain = this.chains[k];\n\n      if (chain.api) {\n        var index = localStorage.getItem(\"\".concat(chain.chain_name, \"-api-index\")) || 0;\n        var host = Array.isArray(chain.api) ? chain.api[index] : chain.api;\n        fetch(\"\".concat(host, \"/blocks/latest\")).then(function (res) {\n          return res.json();\n        }).then(function (b) {\n          var header = b.block.header;\n\n          _this.$set(chain, 'height', header.height);\n\n          _this.$set(chain, 'time', toDay(header.time));\n\n          _this.$set(chain, 'variant', timeIn(header.time, 3, 'm') ? 'danger' : 'success');\n        });\n      }\n    }),\n    visibilityChanged: function visibilityChanged(isVisible, chain) {\n      this.isVisible = isVisible;\n      var idle = this.chains[chain.chain_name];\n\n      if (isVisible && !idle.loaded) {\n        this.$set(idle, 'loaded', true);\n        this.fetch(chain.chain_name);\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}