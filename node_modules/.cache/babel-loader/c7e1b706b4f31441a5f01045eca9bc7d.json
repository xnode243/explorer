{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { resolveVerticalNavMenuItemComponent as resolveNavItemComponent } from '@core/layouts/utils';\nimport { provide, ref } from '@vue/composition-api';\nimport VerticalNavMenuHeader from '../vertical-nav-menu-header';\nimport VerticalNavMenuLink from '../vertical-nav-menu-link/VerticalNavMenuLink.vue';\nimport VerticalNavMenuGroup from '../vertical-nav-menu-group/VerticalNavMenuGroup.vue';\nimport modules from '../../../../../modules';\nexport default {\n  components: {\n    VerticalNavMenuHeader,\n    VerticalNavMenuLink,\n    VerticalNavMenuGroup\n  },\n  props: {\n    items: {\n      type: Array,\n      required: true\n    }\n  },\n\n  setup() {\n    provide('openGroups', ref([]));\n    return {\n      resolveNavItemComponent\n    };\n  },\n\n  computed: {\n    menus() {\n      // pick current blockchain\n      const {\n        selected\n      } = this.$store.state.chains;\n      const {\n        excludes\n      } = selected;\n      const children = [];\n      modules().forEach(m => {\n        if (excludes === undefined || excludes.indexOf(m.route) === -1) {\n          if (m.scope.match('normal') || m.scope.match(selected.chain_name)) {\n            children.push({\n              title: m.title,\n              route: {\n                name: m.route,\n                params: {\n                  chain: selected.chain_name\n                }\n              }\n            });\n          }\n        }\n      });\n      const current = {\n        title: selected.chain_name,\n        icon: selected.logo,\n        route: {\n          name: selected.chain_name,\n          params: {\n            chain: selected.chain_name\n          }\n        }\n      };\n      current.children = children; // this.items.unshift(current)\n\n      return [{\n        header: 'dashboard'\n      }, current].concat(this.items);\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}