{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BLink, BNavbarNav, BMedia, BMediaAside, BAvatar, BMediaBody, VBTooltip, BButton, BDropdown, BDropdownItem, BDropdownDivider } from 'bootstrap-vue';\nimport Ripple from 'vue-ripple-directive';\nimport DarkToggler from '@core/layouts/components/app-navbar/components/DarkToggler.vue';\nimport Locale from '@core/layouts/components/app-navbar/components/Locale.vue';\nimport SearchBar from '@core/layouts/components/app-navbar/components/SearchBar.vue'; // import CartDropdown from '@core/layouts/components/app-navbar/components/CartDropdown.vue'\n\nimport { getLocalAccounts, timeIn, toDay } from '@/libs/utils'; // import UserDropdown from '@core/layouts/components/app-navbar/components/UserDropdown.vue'\n\nexport default {\n  components: {\n    BLink: BLink,\n    BNavbarNav: BNavbarNav,\n    BAvatar: BAvatar,\n    BMedia: BMedia,\n    BMediaAside: BMediaAside,\n    BMediaBody: BMediaBody,\n    BButton: BButton,\n    BDropdown: BDropdown,\n    BDropdownItem: BDropdownItem,\n    BDropdownDivider: BDropdownDivider,\n    // Navbar Components\n    DarkToggler: DarkToggler,\n    Locale: Locale,\n    SearchBar: SearchBar // CartDropdown,\n    // UserDropdown,\n\n  },\n  directives: {\n    'b-tooltip': VBTooltip,\n    Ripple: Ripple\n  },\n  props: {\n    toggleVerticalMenuActive: {\n      type: Function,\n      default: function _default() {}\n    }\n  },\n  data: function data() {\n    return {\n      variant: 'success',\n      tips: 'Synced',\n      index: 0,\n      chainid: ''\n    };\n  },\n  computed: {\n    walletName: function walletName() {\n      var _this$$store, _this$$store$state, _this$$store$state$ch;\n\n      var key = (_this$$store = this.$store) === null || _this$$store === void 0 ? void 0 : (_this$$store$state = _this$$store.state) === null || _this$$store$state === void 0 ? void 0 : (_this$$store$state$ch = _this$$store$state.chains) === null || _this$$store$state$ch === void 0 ? void 0 : _this$$store$state$ch.defaultWallet;\n      return key || 'Wallet';\n    },\n    selected_chain: function selected_chain() {\n      this.block();\n      return this.$store.state.chains.selected;\n    },\n    chainVariant: function chainVariant() {\n      return this.variant;\n    },\n    currentApi: function currentApi() {\n      return this.index + 1 > this.apiOptions.length ? this.apiOptions[0] : this.apiOptions[this.index];\n    },\n    apiOptions: function apiOptions() {\n      var conf = this.$store.state.chains.selected;\n\n      if (Array.isArray(conf.api)) {\n        return conf.api;\n      }\n\n      return [conf.api];\n    },\n    accounts: function accounts() {\n      var _this = this;\n\n      var accounts = getLocalAccounts() || {};\n      accounts = Object.entries(accounts).map(function (v) {\n        return {\n          wallet: v[0],\n          address: v[1].address.find(function (x) {\n            return x.chain === _this.selected_chain.chain_name;\n          })\n        };\n      }).filter(function (v) {\n        return v.address;\n      }); // accounts > 0 and wallet not setted, pick the first one as default\n\n      if (accounts.length > 0 && accounts.findIndex(function (x) {\n        return x.wallet === _this.walletName;\n      }) < 0) {\n        this.updateDefaultWallet(accounts[0].wallet);\n      }\n\n      if (accounts.findIndex(function (x) {\n        return x.wallet === _this.walletName;\n      }) < 0 && this.walletName !== 'Wallet') {\n        this.updateDefaultWallet(null);\n      }\n\n      return accounts;\n    }\n  },\n  methods: {\n    formatAddr: function formatAddr(v) {\n      return v.substring(0, 10).concat('...', v.substring(v.length - 10));\n    },\n    updateDefaultWallet: function updateDefaultWallet(v) {\n      this.$store.commit('setDefaultWallet', v);\n    },\n    change: function change(v) {\n      this.index = v;\n      var conf = this.$store.state.chains.selected;\n      localStorage.setItem(\"\".concat(conf.chain_name, \"-api-index\"), v);\n      window.location.reload();\n    },\n    block: function block() {\n      var _this2 = this;\n\n      var conf = this.$store.state.chains.selected;\n      var s = localStorage.getItem(\"\".concat(conf.chain_name, \"-api-index\")) || 0;\n      this.index = Number(s);\n      this.$store.commit('setHeight', 0);\n      this.$http.getLatestBlock().then(function (block) {\n        _this2.chainid = block.block.header.chain_id;\n\n        _this2.$store.commit('setHeight', Number(block.block.header.height));\n\n        if (timeIn(block.block.header.time, 1, 'm')) {\n          _this2.variant = 'danger';\n          _this2.tips = \"Halted \".concat(toDay(block.block.header.time, 'from'), \", Height: \").concat(_this2.$store.state.chains.height, \" \");\n        } else {\n          _this2.variant = 'success';\n          _this2.tips = 'Synced';\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}