{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { use } from 'echarts/core';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { ScatterChart } from 'echarts/charts';\nimport { TitleComponent, TooltipComponent, LegendComponent } from 'echarts/components';\nimport VChart, { THEME_KEY } from 'vue-echarts';\nimport { chartColors, formatNumber } from '@/libs/utils';\nuse([CanvasRenderer, ScatterChart, TitleComponent, TooltipComponent, LegendComponent]);\nexport default {\n  name: 'AssetScatter',\n  components: {\n    VChart\n  },\n  provide: {\n    [THEME_KEY]: 'light'\n  },\n  props: {\n    items: {\n      type: Array,\n      default: () => []\n    }\n  },\n  computed: {\n    option() {\n      const colors = chartColors();\n      const series = this.items.filter(x => x[1] > 0).map((item, index) => ({\n        name: item[3],\n        data: [item],\n        type: 'scatter',\n\n        symbolSize(data) {\n          const r = Math.log(data[2]) * 8;\n          return r < 15 ? 15 : r;\n        },\n\n        emphasis: {\n          focus: 'series',\n          label: {\n            show: true,\n\n            formatter(param) {\n              return `${param.data[3]}, $${parseFloat(param.data[2]).toFixed(2)}`;\n            },\n\n            position: 'top'\n          }\n        },\n        itemStyle: {\n          shadowBlur: 10,\n          shadowColor: 'rgba(120, 36, 50, 0.5)',\n          shadowOffsetY: 5,\n          color: index > colors.length ? colors[0] : colors[index]\n        }\n      }));\n      const assets = this.items.filter(x => x[1] > 0).map(x => x[3]);\n      return {\n        title: {\n          text: ''\n        },\n        legend: {\n          scroll: 'scroll',\n          data: assets,\n          textStyle: {\n            color: '#aaa'\n          },\n          top: 'top'\n        },\n        grid: {\n          top: `${assets.length > 30 ? 30 : assets.length + 20}%`\n        },\n        // */\n        xAxis: {\n          name: 'Qty',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n\n            formatter(param) {\n              return formatNumber(param, true, 0);\n            }\n\n          }\n        },\n        yAxis: {\n          name: 'Value',\n          nameLocation: 'center',\n          axisLabel: {\n            show: false,\n\n            formatter(param) {\n              return formatNumber(param, true, 0);\n            }\n\n          },\n          scale: true\n        },\n        series\n      };\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}