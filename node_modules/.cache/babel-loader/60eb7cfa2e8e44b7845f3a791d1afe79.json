{"ast":null,"code":"import _objectSpread from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _typeof from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport router from '@/router'; // eslint-disable-next-line object-curly-newline\n\nimport { reactive, getCurrentInstance, watch, toRefs } from '@vue/composition-api';\nexport var isObject = function isObject(obj) {\n  return _typeof(obj) === 'object' && obj !== null;\n};\nexport var isToday = function isToday(date) {\n  var today = new Date();\n  return (\n    /* eslint-disable operator-linebreak */\n    date.getDate() === today.getDate() && date.getMonth() === today.getMonth() && date.getFullYear() === today.getFullYear()\n    /* eslint-enable */\n\n  );\n};\n\nvar getRandomFromArray = function getRandomFromArray(array) {\n  return array[Math.floor(Math.random() * array.length)];\n}; // ? Light and Dark variant is not included\n// prettier-ignore\n\n\nexport var getRandomBsVariant = function getRandomBsVariant() {\n  return getRandomFromArray(['primary', 'secondary', 'success', 'warning', 'danger', 'info']);\n};\nexport var isDynamicRouteActive = function isDynamicRouteActive(route) {\n  var _router$resolve = router.resolve(route),\n      resolvedRoute = _router$resolve.route;\n\n  return resolvedRoute.path === router.currentRoute.path;\n}; // Thanks: https://medium.com/better-programming/reactive-vue-routes-with-the-composition-api-18c1abd878d1\n\nexport var useRouter = function useRouter() {\n  var vm = getCurrentInstance().proxy;\n  var state = reactive({\n    route: vm.$route\n  });\n  watch(function () {\n    return vm.$route;\n  }, function (r) {\n    state.route = r;\n  });\n  return _objectSpread(_objectSpread({}, toRefs(state)), {}, {\n    router: vm.$router\n  });\n};\n/**\n * This is just enhancement over Object.extend [Gives deep extend]\n * @param {target} a Object which contains values to be overridden\n * @param {source} b Object which contains values to override\n */\n// export const objectExtend = (a, b) => {\n//   // Don't touch 'null' or 'undefined' objects.\n//   if (a == null || b == null) {\n//     return a\n//   }\n//   Object.keys(b).forEach(key => {\n//     if (Object.prototype.toString.call(b[key]) === '[object Object]') {\n//       if (Object.prototype.toString.call(a[key]) !== '[object Object]') {\n//         // eslint-disable-next-line no-param-reassign\n//         a[key] = b[key]\n//       } else {\n//         // eslint-disable-next-line no-param-reassign\n//         a[key] = objectExtend(a[key], b[key])\n//       }\n//     } else {\n//       // eslint-disable-next-line no-param-reassign\n//       a[key] = b[key]\n//     }\n//   })\n//   return a\n// }","map":null,"metadata":{},"sourceType":"module"}