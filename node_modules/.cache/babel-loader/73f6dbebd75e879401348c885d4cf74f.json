{"ast":null,"code":"import \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.entries.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport VueQr from 'vue-qr';\nimport { BCard, BCardHeader, BCardBody, BFormInput, BButton } from 'bootstrap-vue';\nimport OperationModal from '@/views/components/OperationModal/index.vue';\nimport { getLocalAccounts } from '@/libs/utils';\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue';\nexport default {\n  components: {\n    BButton: BButton,\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardBody: BCardBody,\n    BFormInput: BFormInput,\n    VueQr: VueQr,\n    OperationModal: OperationModal\n  },\n  data: function data() {\n    var address = this.$route.params.address;\n    return {\n      address: address\n    };\n  },\n  computed: {\n    fromAddress: function fromAddress() {\n      var _this$$store,\n          _this$$store$state,\n          _this$$store$state$ch,\n          _this = this;\n\n      var key = (_this$$store = this.$store) === null || _this$$store === void 0 ? void 0 : (_this$$store$state = _this$$store.state) === null || _this$$store$state === void 0 ? void 0 : (_this$$store$state$ch = _this$$store$state.chains) === null || _this$$store$state$ch === void 0 ? void 0 : _this$$store$state$ch.defaultWallet;\n\n      if (key) {\n        var accounts = getLocalAccounts() || {};\n        var account = Object.entries(accounts).map(function (v) {\n          return {\n            wallet: v[0],\n            address: v[1].address.find(function (x) {\n              return x.chain === _this.$store.state.chains.selected.chain_name;\n            })\n          };\n        }).filter(function (v) {\n          return v.address;\n        }).find(function (x) {\n          return x.wallet === key;\n        });\n\n        if (account) {\n          return account.address.addr;\n        }\n      }\n\n      return null;\n    }\n  },\n  methods: {\n    copy: function copy() {\n      var _this2 = this;\n\n      this.$copyText(this.address).then(function () {\n        _this2.$toast({\n          component: ToastificationContent,\n          props: {\n            title: 'Address copied',\n            icon: 'BellIcon'\n          }\n        });\n      }, function (e) {\n        _this2.$toast({\n          component: ToastificationContent,\n          props: {\n            title: \"Failed to copy address! \".concat(e),\n            icon: 'BellIcon',\n            variant: 'danger'\n          }\n        });\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}