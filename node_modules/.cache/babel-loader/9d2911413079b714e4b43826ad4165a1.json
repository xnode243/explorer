{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCard, BCardTitle, VBTooltip } from 'bootstrap-vue';\nimport { formatTokenDenom } from '@/libs/utils'; // import fetch from 'node-fetch'\n\nexport default {\n  components: {\n    BCard: BCard,\n    BCardTitle: BCardTitle\n  },\n  directives: {\n    'b-tooltip': VBTooltip\n  },\n  data: function data() {\n    return {\n      pools: [],\n      ibcDenom: {}\n    };\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$http.getGravityPools().then(function (res) {\n      _this.pools = res;\n      res.pools.forEach(function (x) {\n        var denom1 = x.reserve_coin_denoms[0];\n        var denom2 = x.reserve_coin_denoms[1];\n\n        if (denom1.startsWith('ibc')) {\n          _this.$http.getIBCDenomTrace(denom1).then(function (denom) {\n            _this.$set(_this.ibcDenom, denom1, denom);\n          });\n        }\n\n        if (denom2.startsWith('ibc')) {\n          _this.$http.getIBCDenomTrace(denom2).then(function (denom) {\n            _this.$set(_this.ibcDenom, denom2, denom);\n          });\n        }\n      });\n    });\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.islive = false;\n    clearInterval(this.timer);\n  },\n  methods: {\n    formatDenom: function formatDenom(v) {\n      // console.log(v, this.ibcDenom[v])\n      var denom = v.startsWith('ibc') ? this.ibcDenom[v].denom_trace.base_denom : v;\n      return formatTokenDenom(denom);\n    },\n    length: function length(v) {\n      return Array.isArray(v) ? v.length : 0;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}