{"ast":null,"code":"import { computed, watch } from '@vue/composition-api';\nimport store from '@/store';\nexport default function usAppConfig() {\n  // ------------------------------------------------\n  // isVerticalMenuCollapsed\n  // ------------------------------------------------\n  const isVerticalMenuCollapsed = computed({\n    get: () => store.state.verticalMenu.isVerticalMenuCollapsed,\n    set: val => {\n      store.commit('verticalMenu/UPDATE_VERTICAL_MENU_COLLAPSED', val);\n    }\n  }); // ------------------------------------------------\n  // RTL\n  // ------------------------------------------------\n\n  const isRTL = computed({\n    get: () => store.state.appConfig.layout.isRTL,\n    set: val => {\n      store.commit('appConfig/TOGGLE_RTL', val);\n    }\n  }); // ------------------------------------------------\n  // Skin\n  // ------------------------------------------------\n\n  const skin = computed({\n    get: () => store.state.appConfig.layout.skin,\n    set: val => {\n      store.commit('appConfig/UPDATE_SKIN', val);\n    }\n  });\n  const skinClasses = computed(() => {\n    if (skin.value === 'bordered') return 'bordered-layout';\n    if (skin.value === 'semi-dark') return 'semi-dark-layout'; // Do not return any class for dark layout because dark layout updates class in body\n    // Do not return any class for light layout as that is default layout\n\n    return null;\n  }); // ------------------------------------------------\n  // routerTransition\n  // ------------------------------------------------\n\n  const routerTransition = computed({\n    get: () => store.state.appConfig.layout.routerTransition,\n    set: val => {\n      store.commit('appConfig/UPDATE_ROUTER_TRANSITION', val);\n    }\n  }); // *===============================================---*\n  // *--------- LAYOUT ---------------------------------------*\n  // *===============================================---*\n  // ------------------------------------------------\n  // layoutType\n  // ------------------------------------------------\n\n  const layoutType = computed({\n    get: () => store.state.appConfig.layout.type,\n    set: val => {\n      store.commit('appConfig/UPDATE_LAYOUT_TYPE', val);\n    }\n  }); // Reset skin if skin is semi-dark and move to horizontal layout\n\n  watch(layoutType, val => {\n    if (val === 'horizontal' && skin.value === 'semi-dark') skin.value = 'light';\n  }); // ------------------------------------------------\n  // Content Width (Full/Boxed)\n  // ------------------------------------------------\n\n  const contentWidth = computed({\n    get: () => store.state.appConfig.layout.contentWidth,\n    set: val => {\n      store.commit('appConfig/UPDATE_CONTENT_WIDTH', val);\n    }\n  }); // ------------------------------------------------\n  // isNavMenuHidden\n  // ------------------------------------------------\n\n  const isNavMenuHidden = computed({\n    get: () => store.state.appConfig.layout.menu.hidden,\n    set: val => {\n      store.commit('appConfig/UPDATE_NAV_MENU_HIDDEN', val);\n    }\n  }); // *===============================================---*\n  // *--------- NAVBAR ---------------------------------------*\n  // *===============================================---*\n\n  const navbarBackgroundColor = computed({\n    get: () => store.state.appConfig.layout.navbar.backgroundColor,\n    set: val => {\n      store.commit('appConfig/UPDATE_NAVBAR_CONFIG', {\n        backgroundColor: val\n      });\n    }\n  });\n  const navbarType = computed({\n    get: () => store.state.appConfig.layout.navbar.type,\n    set: val => {\n      store.commit('appConfig/UPDATE_NAVBAR_CONFIG', {\n        type: val\n      });\n    }\n  }); // *===============================================---*\n  // *--------- FOOTER ---------------------------------------*\n  // *===============================================---*\n\n  const footerType = computed({\n    get: () => store.state.appConfig.layout.footer.type,\n    set: val => {\n      store.commit('appConfig/UPDATE_FOOTER_CONFIG', {\n        type: val\n      });\n    }\n  });\n  return {\n    isVerticalMenuCollapsed,\n    isRTL,\n    skin,\n    skinClasses,\n    routerTransition,\n    // Navbar\n    navbarBackgroundColor,\n    navbarType,\n    // Footer\n    footerType,\n    // Layout\n    layoutType,\n    contentWidth,\n    isNavMenuHidden\n  };\n}","map":null,"metadata":{},"sourceType":"module"}