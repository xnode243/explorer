{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCard, BCardTitle, VBTooltip } from 'bootstrap-vue';\nimport { formatTokenDenom } from '@/libs/utils'; // import fetch from 'node-fetch'\n\nexport default {\n  components: {\n    BCard,\n    BCardTitle\n  },\n  directives: {\n    'b-tooltip': VBTooltip\n  },\n\n  data() {\n    return {\n      pools: [],\n      ibcDenom: {}\n    };\n  },\n\n  created() {\n    this.$http.getGravityPools().then(res => {\n      this.pools = res;\n      res.pools.forEach(x => {\n        const denom1 = x.reserve_coin_denoms[0];\n        const denom2 = x.reserve_coin_denoms[1];\n\n        if (denom1.startsWith('ibc')) {\n          this.$http.getIBCDenomTrace(denom1).then(denom => {\n            this.$set(this.ibcDenom, denom1, denom);\n          });\n        }\n\n        if (denom2.startsWith('ibc')) {\n          this.$http.getIBCDenomTrace(denom2).then(denom => {\n            this.$set(this.ibcDenom, denom2, denom);\n          });\n        }\n      });\n    });\n  },\n\n  beforeDestroy() {\n    this.islive = false;\n    clearInterval(this.timer);\n  },\n\n  methods: {\n    formatDenom(v) {\n      // console.log(v, this.ibcDenom[v])\n      const denom = v.startsWith('ibc') ? this.ibcDenom[v].denom_trace.base_denom : v;\n      return formatTokenDenom(denom);\n    },\n\n    length: v => Array.isArray(v) ? v.length : 0\n  }\n};","map":null,"metadata":{},"sourceType":"module"}