{"ast":null,"code":"import _asyncToGenerator from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _classCallCheck from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _createClass from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.object.values.js\";\nimport \"core-js/modules/es.string.starts-with.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n\n/*\n * @Description: file\n * @Autor: dingyiming\n * @Date: 2021-11-22 21:20:10\n * @LastEditors: dingyiming\n * @LastEditTime: 2021-11-25 00:45:16\n */\nimport { sha256 } from '@cosmjs/crypto';\nimport { toHex } from '@cosmjs/encoding';\nimport fetch from 'node-fetch';\nimport { formatTokenDenom, getLocalChains } from './utils';\nexport var poolIds = {\n  1: true,\n  2: true,\n  3: true,\n  4: true,\n  5: true,\n  6: true,\n  7: true,\n  8: true,\n  9: true,\n  10: true,\n  13: true,\n  15: true,\n  461: true,\n  482: true,\n  497: true,\n  498: true,\n  548: true // 557: true,\n  // 558: true,\n  // 571: true,\n  // 572: true,\n\n};\nexport var CoinGeckoMap = {\n  ATOM: ['cosmos'],\n  OSMO: ['osmosis'],\n  IRIS: ['iris-network'],\n  AKT: ['akash-network'],\n  LUNA: ['terra-luna'],\n  UST: ['terrausd'],\n  KRT: ['terra-krw'],\n  BAND: ['band-protocol'],\n  CRO: ['crypto-com-chain'],\n  KAVA: ['kava'],\n  OKT: ['okexchain'],\n  CTK: ['certik'],\n  XPRT: ['persistence'],\n  REGEN: ['regen'],\n  SCRT: ['secret'],\n  DVPN: ['sentinel'],\n  ION: ['ion'],\n  ROWAN: ['sifchain'],\n  IOV: ['starname'],\n  BTSG: ['bitsong'],\n  NGM: ['e-money'],\n  EEUR: ['e-money-eur'],\n  LIKE: ['likecoin'],\n  JUNO: ['juno-network'],\n  STGZ: ['stargaze-protocol'],\n  VDL: ['vidulum'],\n  XKI: ['ki'],\n  INJ: ['injective-protocol']\n};\nexport function getChainConfigForSymbol(symbol) {\n  var key = CoinGeckoMap[symbol];\n\n  if (key) {\n    var confs = getLocalChains();\n    return Object.values(confs).find(function (x) {\n      return x.coingecko === key[0];\n    });\n  }\n\n  return null;\n}\nexport function getPairName(pool, denomTrace) {\n  var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'base';\n  var isFormat = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n  var index = type === 'base' ? 0 : 1;\n\n  if (pool && pool.poolAssets) {\n    var _denomTrace$pool$pool;\n\n    var denom = pool.poolAssets[index].token.denom.startsWith('ibc') ? (_denomTrace$pool$pool = denomTrace[pool.poolAssets[index].token.denom]) === null || _denomTrace$pool$pool === void 0 ? void 0 : _denomTrace$pool$pool.base_denom : pool.poolAssets[index].token.denom;\n    return isFormat ? formatTokenDenom(denom) : denom;\n  }\n\n  return '-';\n}\n\nvar OsmosAPI = /*#__PURE__*/function () {\n  function OsmosAPI() {\n    _classCallCheck(this, OsmosAPI);\n  }\n\n  _createClass(OsmosAPI, [{\n    key: \"preHandler\",\n    value: function preHandler() {\n      this.version = '';\n    }\n  }, {\n    key: \"get\",\n    value: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(url) {\n        var chains, conf, index;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                chains = getLocalChains();\n                conf = chains.osmosis;\n                index = this.getApiIndex(conf);\n                this.host = Array.isArray(conf.api) ? conf.api[index] : conf.api;\n                return _context.abrupt(\"return\", fetch(\"\".concat(this.host).concat(url)).then(function (res) {\n                  return res.json();\n                }));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function get(_x) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }, {\n    key: \"getApiIndex\",\n    value: function getApiIndex() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var conf = config || this.config;\n      var index = Number(localStorage.getItem(\"\".concat(conf.chain_name, \"-api-index\")) || 0);\n      return index < conf.api.length ? index : 0;\n    }\n  }, {\n    key: \"getMarketData\",\n    value: function () {\n      var _getMarketData = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(from, to) {\n        var days,\n            _args2 = arguments;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                days = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : 14;\n\n                if (!(from && to)) {\n                  _context2.next = 4;\n                  break;\n                }\n\n                this.exe_time = '';\n                return _context2.abrupt(\"return\", Promise.all([fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(from, \"/market_chart?vs_currency=usd&days=\").concat(days)).then(function (res) {\n                  return res.json();\n                }), fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(to, \"/market_chart?vs_currency=usd&days=\").concat(days)).then(function (res) {\n                  return res.json();\n                })]).then(function (data) {\n                  var output = [];\n\n                  if (data.length >= 2) {\n                    data[0].prices.forEach(function (x, i) {\n                      if (data[1].prices[i]) {\n                        output.push([x[0], (x[1] / data[1].prices[i][1]).toFixed(6)]);\n                      }\n                    });\n                  }\n\n                  return {\n                    prices: output\n                  };\n                }));\n\n              case 4:\n                return _context2.abrupt(\"return\", {\n                  prices: []\n                });\n\n              case 5:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getMarketData(_x2, _x3) {\n        return _getMarketData.apply(this, arguments);\n      }\n\n      return getMarketData;\n    }()\n  }, {\n    key: \"getOHCL4Pairs\",\n    value: function () {\n      var _getOHCL4Pairs = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3(from, to) {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!(from && to)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                this.exe_time = '';\n                return _context3.abrupt(\"return\", Promise.all([fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(from, \"/ohlc?vs_currency=usd&days=1\")).then(function (res) {\n                  return res.json();\n                }), fetch(\"https://api.coingecko.com/api/v3/coins/\".concat(to, \"/ohlc?vs_currency=usd&days=1\")).then(function (res) {\n                  return res.json();\n                })]).then(function (ohlc) {\n                  var output = [];\n                  ohlc[0].forEach(function (e, i) {\n                    var price = [e[0]];\n\n                    for (var j = 1; j <= 4; j += 1) {\n                      var _ohlc$, _ohlc$$i;\n\n                      price.push(e[j] / (ohlc === null || ohlc === void 0 ? void 0 : (_ohlc$ = ohlc[1]) === null || _ohlc$ === void 0 ? void 0 : (_ohlc$$i = _ohlc$[i]) === null || _ohlc$$i === void 0 ? void 0 : _ohlc$$i[j]));\n                    }\n\n                    output.push(price);\n                  });\n                  var result = [];\n\n                  for (var i = 0; i < output.length; i += 1) {\n                    var itemArr = output[i];\n                    result.push([itemArr[0], itemArr[1], // open\n                    itemArr[2], // high\n                    itemArr[3], // low\n                    itemArr[4], // close\n                    0 // volume\n                    ]);\n                  }\n\n                  return result;\n                }));\n\n              case 3:\n                return _context3.abrupt(\"return\", null);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function getOHCL4Pairs(_x4, _x5) {\n        return _getOHCL4Pairs.apply(this, arguments);\n      }\n\n      return getOHCL4Pairs;\n    }() // Custom Module\n\n  }, {\n    key: \"getPools\",\n    value: function () {\n      var _getPools = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var tradeable;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                tradeable = [];\n                Object.keys(poolIds).forEach(function (k) {\n                  if (poolIds[k]) {\n                    tradeable.push(k);\n                  }\n                });\n                return _context4.abrupt(\"return\", this.get('/osmosis/gamm/v1beta1/pools?pagination.limit=700').then(function (res) {\n                  var output = res.pools.filter(function (x) {\n                    return tradeable.includes(x.id);\n                  });\n                  return output;\n                }));\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getPools() {\n        return _getPools.apply(this, arguments);\n      }\n\n      return getPools;\n    }()\n  }, {\n    key: \"getDenomTraces\",\n    value: function () {\n      var _getDenomTraces = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {\n        return regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                return _context5.abrupt(\"return\", this.get('/ibc/apps/transfer/v1/denom_traces?pagination.limit=500').then(function (x) {\n                  var combined = {};\n                  x.denom_traces.forEach(function (item) {\n                    var k = 'ibc/'.concat(toHex(sha256(new TextEncoder('utf-8').encode(\"\".concat(item.path, \"/\").concat(item.base_denom)))).toUpperCase());\n                    combined[k] = item;\n                  });\n                  return combined;\n                }));\n\n              case 1:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getDenomTraces() {\n        return _getDenomTraces.apply(this, arguments);\n      }\n\n      return getDenomTraces;\n    }()\n  }, {\n    key: \"getIncentivesPools\",\n    value: function () {\n      var _getIncentivesPools = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6() {\n        return regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this.get('/osmosis/pool-incentives/v1beta1/incentivized_pools?pagination.limit=700'));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function getIncentivesPools() {\n        return _getIncentivesPools.apply(this, arguments);\n      }\n\n      return getIncentivesPools;\n    }()\n  }]);\n\n  return OsmosAPI;\n}();\n\nexport { OsmosAPI as default };","map":null,"metadata":{},"sourceType":"module"}