{"ast":null,"code":"import _typeof from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/typeof.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.entries.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.flat.js\";\nimport \"core-js/modules/es.array.unscopables.flat.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.string.replace-all.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BRow, BCol, BAlert, BCard, BTable, BFormCheckbox, BCardHeader, BCardTitle, BMedia, BMediaAside, BMediaBody, BAvatar, BCardBody, BLink, BButtonGroup, BButton, BTooltip, VBModal, VBTooltip, BCardFooter, BProgress, BProgressBar, BBadge, BDropdown, BDropdownItem } from 'bootstrap-vue';\nimport { formatNumber, formatTokenAmount, isToken, percent as _percent, timeIn, toDay, toDuration, tokenFormatter, getLocalAccounts, getStakingValidatorOperator, formatToken } from '@/libs/utils';\nimport OperationModal from '@/views/components/OperationModal/index.vue';\nimport Ripple from 'vue-ripple-directive';\nimport dayjs from 'dayjs';\nimport VueMarkdown from 'vue-markdown';\nimport ParametersModuleComponent from './components/parameters/ParametersModuleComponent.vue';\nimport DashboardCardHorizontal from './components/dashboard/DashboardCardHorizontal.vue';\nimport DashboardCardVertical from './components/dashboard/DashboardCardVertical.vue';\nimport DashboardPriceChart2 from './components/dashboard/DashboardPriceChart2.vue';\nimport FeatherIcon from '../@core/components/feather-icon/FeatherIcon.vue';\nexport default {\n  components: {\n    BAvatar: BAvatar,\n    BButtonGroup: BButtonGroup,\n    BTooltip: BTooltip,\n    BButton: BButton,\n    BDropdown: BDropdown,\n    BDropdownItem: BDropdownItem,\n    BRow: BRow,\n    BCol: BCol,\n    BAlert: BAlert,\n    BCard: BCard,\n    BTable: BTable,\n    BFormCheckbox: BFormCheckbox,\n    BCardHeader: BCardHeader,\n    BCardTitle: BCardTitle,\n    BMediaBody: BMediaBody,\n    BMediaAside: BMediaAside,\n    BMedia: BMedia,\n    BCardBody: BCardBody,\n    BLink: BLink,\n    BCardFooter: BCardFooter,\n    BProgress: BProgress,\n    BProgressBar: BProgressBar,\n    VueMarkdown: VueMarkdown,\n    BBadge: BBadge,\n    OperationModal: OperationModal,\n    ParametersModuleComponent: ParametersModuleComponent,\n    DashboardCardHorizontal: DashboardCardHorizontal,\n    DashboardPriceChart2: DashboardPriceChart2,\n    DashboardCardVertical: DashboardCardVertical,\n    FeatherIcon: FeatherIcon\n  },\n  directives: {\n    'b-modal': VBModal,\n    'b-tooltip': VBTooltip,\n    Ripple: Ripple\n  },\n  data: function data() {\n    return {\n      detailId: 0,\n      fields: ['validator', 'delegation', 'rewards', 'action'],\n      delegations: [],\n      rewards: [],\n      unbonding: [],\n      chain: this.$store.state.chains.selected.chain_name,\n      syncing: false,\n      latestTime: '',\n      marketData: null,\n      height: '-',\n      supply: '-',\n      bonded: '-',\n      validators: '-',\n      communityPool: '-',\n      ratio: '-',\n      inflation: '-',\n      proposals: [],\n      myVotes: {},\n      selectedValidator: '',\n      selectedProposalId: 0,\n      selectedTitle: '',\n      operationModalType: '',\n      tallyParam: null,\n      totalPower: 0,\n      voteColors: {\n        YES: 'success',\n        NO: 'warning',\n        ABSTAIN: 'info',\n        NO_WITH_VETO: 'danger'\n      },\n      walletBalances: '-',\n      walletStaking: '-',\n      walletRewards: '-',\n      walletUnbonding: '-',\n      address: null\n    };\n  },\n  computed: {\n    walletName: function walletName() {\n      var _this$$store,\n          _this$$store$state,\n          _this$$store$state$ch,\n          _this = this;\n\n      var key = (_this$$store = this.$store) === null || _this$$store === void 0 ? void 0 : (_this$$store$state = _this$$store.state) === null || _this$$store$state === void 0 ? void 0 : (_this$$store$state$ch = _this$$store$state.chains) === null || _this$$store$state$ch === void 0 ? void 0 : _this$$store$state$ch.defaultWallet;\n\n      if (key) {\n        var accounts = getLocalAccounts() || {};\n        var account = Object.entries(accounts).map(function (v) {\n          return {\n            wallet: v[0],\n            address: v[1].address.find(function (x) {\n              return x.chain === _this.$store.state.chains.selected.chain_name;\n            })\n          };\n        }).filter(function (v) {\n          return v.address;\n        }).find(function (x) {\n          return x.wallet === key;\n        });\n\n        if (account) {\n          this.fetchAccount(account.address.addr);\n        }\n      }\n\n      return key || 'Wallet';\n    },\n    proprosals2: function proprosals2() {\n      return this.proposals;\n    },\n    stakingList: function stakingList() {\n      var _this2 = this;\n\n      return this.delegations.map(function (x) {\n        var rewards = _this2.rewards.find(function (r) {\n          return r.validator_address === x.delegation.validator_address;\n        });\n\n        var conf = _this2.$http.getSelectedConfig();\n\n        var decimal = conf.assets[0].exponent || '6';\n        return {\n          valAddress: x.delegation.validator_address,\n          validator: getStakingValidatorOperator(_this2.$store.state.chains.selected.chain_name, x.delegation.validator_address),\n          delegation: formatToken(x.balance, {}, decimal),\n          rewards: rewards ? _this2.formatToken(rewards.reward) : '',\n          action: ''\n        };\n      });\n    }\n  },\n  created: function created() {\n    var _this3 = this;\n\n    this.$http.getStakingParameters().then(function (res) {\n      Promise.all([_this3.$http.getStakingPool(), _this3.$http.getBankTotal(res.bond_denom)]).then(function (pool) {\n        _this3.supply = \"\".concat(formatNumber(formatTokenAmount(pool[1].amount, 2, res.bond_denom, false), true, 2));\n        _this3.bonded = \"\".concat(formatNumber(formatTokenAmount(pool[0].bondedToken, 2, res.bond_denom, false), true, 2));\n        _this3.ratio = \"\".concat(_percent(pool[0].bondedToken / pool[1].amount), \"%\");\n        _this3.totalPower = pool[0].bondedToken;\n      });\n    });\n    this.$http.getGovernanceListByStatus(2).then(function (gov) {\n      _this3.proposals = gov.proposals;\n\n      _this3.proposals.forEach(function (p) {\n        _this3.$http.getGovernanceTally(p.id, 0).then(function (update) {\n          // const p2 = p\n          // p2.tally = update\n          // this.proposals.push(p2)\n          // this.proposals.sort((a, b) => a.id - b.id)\n          _this3.$set(p, 'tally', update);\n        });\n      });\n    });\n    this.$http.getLatestBlock().then(function (res) {\n      _this3.height = res.block.header.height;\n\n      if (timeIn(res.block.header.time, 3, 'm')) {\n        _this3.syncing = true;\n      } else {\n        _this3.syncing = false;\n      }\n\n      _this3.latestTime = toDay(res.block.header.time, 'long');\n      _this3.validators = res.block.last_commit.signatures.length;\n    });\n    this.$http.getCommunityPool().then(function (res) {\n      _this3.communityPool = _this3.formatToken(res.pool);\n    });\n    this.$http.getGovernanceParameterTallying().then(function (res) {\n      _this3.tallyParam = res;\n    });\n    var conf = this.$http.getSelectedConfig();\n\n    if (conf.excludes && conf.excludes.indexOf('mint') > -1) {\n      this.inflation = '-';\n    } else {\n      this.$http.getMintingInflation().then(function (res) {\n        _this3.inflation = \"\".concat(_percent(res), \"%\");\n      }).catch(function () {\n        _this3.inflation = '-';\n      });\n    }\n  },\n  mounted: function mounted() {\n    var _this4 = this;\n\n    var elem = document.getElementById('txevent');\n    elem.addEventListener('txcompleted', function () {\n      var _this4$$store, _this4$$store$state, _this4$$store$state$c;\n\n      var key = (_this4$$store = _this4.$store) === null || _this4$$store === void 0 ? void 0 : (_this4$$store$state = _this4$$store.state) === null || _this4$$store$state === void 0 ? void 0 : (_this4$$store$state$c = _this4$$store$state.chains) === null || _this4$$store$state$c === void 0 ? void 0 : _this4$$store$state$c.defaultWallet;\n\n      if (key) {\n        var accounts = getLocalAccounts() || {};\n        var account = Object.entries(accounts).map(function (v) {\n          return {\n            wallet: v[0],\n            address: v[1].address.find(function (x) {\n              return x.chain === _this4.$store.state.chains.selected.chain_name;\n            })\n          };\n        }).filter(function (v) {\n          return v.address;\n        }).find(function (x) {\n          return x.wallet === key;\n        });\n\n        if (account) {\n          _this4.fetchAccount(account.address.addr);\n        }\n      }\n    });\n  },\n  methods: {\n    caculateTallyResult: function caculateTallyResult(tally) {\n      if (this.tallyParam && tally && this.totalPower > 0) {\n        if (tally.veto < Number(this.tallyParam.veto_threshold) && tally.yes > Number(this.tallyParam.threshold) && tally.total / this.totalPower > Number(this.tallyParam.quorum)) {\n          return 'pass';\n        }\n      }\n\n      return 'be rejected';\n    },\n    scaleWidth: function scaleWidth(p) {\n      if (this.tallyParam) {\n        return Number(this.tallyParam.quorum) * Number(this.tallyParam.threshold) * (1 - p.tally.abstain) * 100;\n      }\n\n      return 50;\n    },\n    selectProposal: function selectProposal(modal, pid, title) {\n      this.operationModalType = modal;\n      this.selectedProposalId = Number(pid);\n      this.selectedTitle = title;\n    },\n    selectDelegation: function selectDelegation(v, type) {\n      this.selectedValidator = v.item.valAddress;\n      this.operationModalType = type;\n    },\n    selectSend: function selectSend() {\n      this.operationModalType = 'Transfer';\n    },\n    selectWithdraw: function selectWithdraw() {\n      this.operationModalType = 'Withdraw';\n    },\n    formatToken: function formatToken(tokens) {\n      if (Array.isArray(tokens)) {\n        var nativeToken = tokens.filter(function (x) {\n          return x.denom.length < 11;\n        });\n\n        if (tokens.length > 1) {\n          var sum = {};\n          var reduce = nativeToken.reduce(function (b, a) {\n            var b2 = b;\n\n            if (b2[a.denom]) {\n              b2[a.denom] += Number(a.amount);\n            } else {\n              b2[a.denom] = Number(a.amount);\n            }\n\n            return b2;\n          }, sum);\n          nativeToken = Object.keys(reduce).map(function (k) {\n            return {\n              denom: k,\n              amount: reduce[k]\n            };\n          });\n        }\n\n        return tokenFormatter(nativeToken, {}, 0);\n      }\n\n      return '-';\n    },\n    fetchAccount: function fetchAccount(address) {\n      var _this5 = this;\n\n      this.address = address;\n      this.$http.getBankAccountBalance(address).then(function (bal) {\n        _this5.walletBalances = _this5.formatToken(bal);\n      });\n      this.$http.getStakingReward(address).then(function (res) {\n        _this5.rewards = res.rewards;\n        _this5.walletRewards = _this5.formatToken(res.rewards.map(function (x) {\n          return x.reward;\n        }).flat());\n      });\n      this.$http.getStakingDelegations(address).then(function (res) {\n        var delegations = res.delegation_responses || res;\n        _this5.delegations = delegations;\n        _this5.walletStaking = _this5.formatToken(delegations.map(function (x) {\n          return x.balance;\n        }).flat());\n      });\n      this.$http.getStakingUnbonding(address).then(function (res) {\n        var token = _this5.$store.state.chains.selected.assets[0];\n\n        if (token) {\n          var newTokens = [];\n          var denom = token.base;\n          var unbonding = res.unbonding_responses || res;\n          _this5.unbonding = unbonding;\n          unbonding.forEach(function (x) {\n            x.entries.forEach(function (y) {\n              newTokens.push({\n                amount: y.balance,\n                denom: denom\n              });\n            });\n          });\n\n          if (newTokens.length > 0) {\n            _this5.walletUnbonding = _this5.formatToken(newTokens);\n          }\n        }\n      });\n      this.proposals.forEach(function (x) {\n        _this5.$http.getGovernanceProposalVote(x.id, address, null).then(function (v) {\n          _this5.myVotes[x.id] = _this5.formatVoteOption(v.vote.option);\n        }).catch(function () {\n          _this5.myVotes[x.id] = null;\n        });\n      });\n    },\n    formatVoteOption: function formatVoteOption(v) {\n      return v.replaceAll('VOTE_OPTION_', '');\n    },\n    formatEnding: function formatEnding(v) {\n      return toDay(v, 'from');\n    },\n    formatType: function formatType(v) {\n      var txt = String(v).replace('Proposal', '');\n      var index = txt.lastIndexOf('.');\n      return index > 0 ? txt.substring(index + 1) : txt;\n    },\n    normalize: function normalize(data, title) {\n      if (!data) return null;\n      var items = this.makeItems(data);\n      return {\n        title: title,\n        items: items\n      };\n    },\n    makeItems: function makeItems(data) {\n      var _this6 = this;\n\n      return Object.keys(data).map(function (k) {\n        if (isToken(data[k])) {\n          return {\n            title: tokenFormatter(data[k]),\n            subtitle: k\n          };\n        }\n\n        if (typeof data[k] === 'boolean') {\n          return {\n            title: data[k],\n            subtitle: k\n          };\n        }\n\n        return {\n          title: _this6.convert(data[k]),\n          subtitle: k\n        };\n      });\n    },\n    addNewLine: function addNewLine(value) {\n      return value ? value.replace(/(?:\\\\[rn])+/g, '\\n') : '-';\n    },\n    percent: function percent(v) {\n      return _percent(v);\n    },\n    processBarLength: function processBarLength(v) {\n      return _percent(v);\n    },\n    formatDate: function formatDate(v) {\n      return dayjs(v).format('YYYY-MM-DD HH:mm:ss');\n    },\n    convert: function convert(v) {\n      var _this7 = this;\n\n      if (_typeof(v) === 'object') {\n        var v2 = {};\n        Object.entries(v).forEach(function (e) {\n          var k = e[0];\n          var x = e[1];\n          v2[k] = _this7.convert(x);\n        });\n        return v2;\n      }\n\n      var d = parseFloat(v);\n      if (d === 0) return '0';\n\n      if (d < 1.01) {\n        return \"\".concat(_percent(d), \"%\");\n      }\n\n      if (d > 1000000000) {\n        return \"\".concat(toDuration(d / 1000000));\n      }\n\n      if (d > 0) {\n        return d.toFixed();\n      }\n\n      return v;\n    },\n    showDetail: function showDetail(id) {\n      if (this.detailId !== id) {\n        this.detailId = id;\n      } else {\n        this.detailId = 0;\n      }\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}