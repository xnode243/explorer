{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BTableSimple, BTr, BTd, BTabs, BTab, BTbody } from 'bootstrap-vue';\nimport { abbr, getStakingValidatorByHex, isHexAddress, isStringArray, isToken, percent, tokenFormatter } from '@/libs/utils';\nimport VueMarkdown from 'vue-markdown';\nimport ArrayFieldComponent from './ArrayFieldComponent.vue';\nexport default {\n  name: 'ObjectFieldComponent',\n  components: {\n    BTableSimple,\n    BTr,\n    BTd,\n    BTabs,\n    BTab,\n    BTbody,\n    ArrayFieldComponent,\n    VueMarkdown\n  },\n  props: {\n    tablefield: {\n      type: [Array, Object],\n      default: () => {}\n    },\n    small: {\n      type: Boolean,\n      default: true\n    }\n  },\n\n  data() {\n    return {\n      options: {\n        markdownIt: {\n          linkify: true\n        },\n        linkAttributes: {\n          attrs: {\n            target: '_blank',\n            rel: 'noopener'\n          }\n        }\n      }\n    };\n  },\n\n  methods: {\n    formatObject(value) {\n      // console.log(value, typeof (value) === 'object', Object.keys(value))\n      // if (typeof (value) === 'object' && Object.keys(value).length === 1) {\n      //   console.log(value)\n      //   return value[Object.keys(value)[0]]\n      // }\n      return value;\n    },\n\n    formatTitle: v => String(v).replaceAll('_', ' '),\n\n    isObjectText(v) {\n      return String(v).startsWith('{') && String(v).endsWith('}');\n    },\n\n    toObject(v) {\n      return JSON.parse(v);\n    },\n\n    formatText: v => abbr(v, 60),\n\n    eval_value(value) {\n      return Array.from(value);\n    },\n\n    isTokenField(value) {\n      return value ? isToken(value) : false;\n    },\n\n    isHex(value) {\n      return value ? isHexAddress(value) : false;\n    },\n\n    formatHexAddress(v) {\n      return getStakingValidatorByHex(this.$http.config.chain_name, v);\n    },\n\n    isArrayText(value) {\n      return value ? isStringArray(value) : false;\n    },\n\n    formatTokens(value) {\n      return tokenFormatter(value);\n    },\n\n    addNewLine(value) {\n      const percentage = /^0\\.\\d+/;\n\n      if (percentage.test(value)) {\n        return `${percent(value)}%`;\n      }\n\n      return value ? value.replace(/(?:\\\\[rn])+/g, '\\n') : '-';\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}