{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ValidationProvider } from 'vee-validate';\nimport { BRow, BCol, BFormGroup, BFormInput, BFormRadio } from 'bootstrap-vue';\nimport { required, email, url, between, alpha, integer, password, min, digits, alphaDash, length } from '@validations';\nimport { formatToken } from '@/libs/utils';\nexport default {\n  name: 'VoteDialogue',\n  components: {\n    BRow: BRow,\n    BCol: BCol,\n    BFormGroup: BFormGroup,\n    BFormRadio: BFormRadio,\n    ValidationProvider: ValidationProvider,\n    BFormInput: BFormInput\n  },\n  props: {\n    proposalId: {\n      type: Number,\n      required: true\n    },\n    proposalTitle: {\n      type: String,\n      required: true\n    },\n    address: {\n      type: String,\n      default: null\n    }\n  },\n  data: function data() {\n    return {\n      option: null,\n      required: required,\n      password: password,\n      email: email,\n      min: min,\n      integer: integer,\n      url: url,\n      alpha: alpha,\n      between: between,\n      digits: digits,\n      length: length,\n      alphaDash: alphaDash\n    };\n  },\n  computed: {\n    msg: function msg() {\n      return [{\n        typeUrl: '/cosmos.gov.v1beta1.MsgVote',\n        value: {\n          voter: this.address,\n          proposalId: this.proposalId,\n          option: Number(this.option)\n        }\n      }];\n    }\n  },\n  mounted: function mounted() {\n    this.$emit('update', {\n      modalTitle: 'Vote',\n      historyName: 'vote'\n    });\n  },\n  methods: {\n    format: function format(v) {\n      return formatToken(v);\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}