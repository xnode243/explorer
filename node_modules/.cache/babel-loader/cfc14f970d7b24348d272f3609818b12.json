{"ast":null,"code":"import \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCardTitle, BCardFooter, BButton, BProgressBar, BProgress, BBadge, BTooltip, BRow, BCol, VBModal } from 'bootstrap-vue';\nimport Ripple from 'vue-ripple-directive';\nimport OperationModal from '@/views/components/OperationModal/index.vue';\nimport ProposalSummaryComponent from './components/governance/ProposalSummaryComponent.vue';\nexport default {\n  components: {\n    BButton: BButton,\n    BCardFooter: BCardFooter,\n    BProgressBar: BProgressBar,\n    BProgress: BProgress,\n    BBadge: BBadge,\n    BCardTitle: BCardTitle,\n    BTooltip: BTooltip,\n    BRow: BRow,\n    BCol: BCol,\n    OperationModal: OperationModal,\n    ProposalSummaryComponent: ProposalSummaryComponent\n  },\n  directives: {\n    'b-modal': VBModal,\n    Ripple: Ripple\n  },\n  data: function data() {\n    return {\n      selectedProposalId: 0,\n      selectedTitle: '',\n      proposals: [],\n      max: 1,\n      operationModalType: '',\n      next: '',\n      totalPower: 0,\n      tallyParam: null\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    this.$http.getGovernanceParameterTallying().then(function (res) {\n      _this.tallyParam = res;\n    });\n    this.getList();\n  },\n  methods: {\n    getList: function getList() {\n      var _this2 = this;\n\n      this.loading = true;\n      this.$http.getGovernanceList(this.next).then(function (res) {\n        _this2.proposals = _this2.proposals.concat(res.proposals);\n\n        _this2.updateTally(_this2.proposals);\n\n        _this2.next = res.pagination.next_key;\n        _this2.loading = false;\n      });\n    },\n    updateTally: function updateTally(res) {\n      var _this3 = this;\n\n      this.$http.getStakingPool().then(function (pool) {\n        _this3.totalPower = pool.bondedToken;\n        var voting = res.filter(function (i) {\n          return i.status === 2;\n        });\n\n        if (voting.length > 0) {\n          voting.forEach(function (p) {\n            return _this3.$http.getGovernanceTally(p.id, 0).then(function (update) {\n              _this3.$set(p, 'tally', update);\n            });\n          });\n        }\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}