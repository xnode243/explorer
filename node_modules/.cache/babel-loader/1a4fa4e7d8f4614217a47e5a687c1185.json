{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { ValidationProvider } from 'vee-validate';\nimport { BRow, BCol, BFormGroup, BFormInput, BFormRadio } from 'bootstrap-vue';\nimport { required, email, url, between, alpha, integer, password, min, digits, alphaDash, length } from '@validations';\nimport { formatToken } from '@/libs/utils';\nexport default {\n  name: 'VoteDialogue',\n  components: {\n    BRow,\n    BCol,\n    BFormGroup,\n    BFormRadio,\n    ValidationProvider,\n    BFormInput\n  },\n  props: {\n    proposalId: {\n      type: Number,\n      required: true\n    },\n    proposalTitle: {\n      type: String,\n      required: true\n    },\n    address: {\n      type: String,\n      default: null\n    }\n  },\n\n  data() {\n    return {\n      option: null,\n      required,\n      password,\n      email,\n      min,\n      integer,\n      url,\n      alpha,\n      between,\n      digits,\n      length,\n      alphaDash\n    };\n  },\n\n  computed: {\n    msg() {\n      return [{\n        typeUrl: '/cosmos.gov.v1beta1.MsgVote',\n        value: {\n          voter: this.address,\n          proposalId: this.proposalId,\n          option: Number(this.option)\n        }\n      }];\n    }\n\n  },\n\n  mounted() {\n    this.$emit('update', {\n      modalTitle: 'Vote',\n      historyName: 'vote'\n    });\n  },\n\n  methods: {\n    format(v) {\n      return formatToken(v);\n    }\n\n  }\n};","map":null,"metadata":{},"sourceType":"module"}