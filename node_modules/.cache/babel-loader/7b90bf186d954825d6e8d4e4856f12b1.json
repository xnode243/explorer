{"ast":null,"code":"import _asyncToGenerator from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n/* eslint-disable */\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nvar long_1 = __importDefault(require(\"long\"));\n\nimport { BFormInput, BButton, BAlert, BFormGroup, BInputGroup, BInputGroupAppend, BFormRadio, BFormRadioGroup, BCard, BPopover } from 'bootstrap-vue';\nimport FeatherIcon from '@core/components/feather-icon/FeatherIcon.vue';\nimport { formatTokenAmount, getLocalAccounts, percent, setLocalTxHistory, sign } from '@/libs/utils';\nimport { getPairName } from '@/libs/osmos';\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue';\nimport DepositeWindow from './DepositeWindow.vue';\nexport default {\n  components: {\n    BAlert: BAlert,\n    BButton: BButton,\n    BCard: BCard,\n    BFormInput: BFormInput,\n    BFormRadio: BFormRadio,\n    BFormRadioGroup: BFormRadioGroup,\n    BFormGroup: BFormGroup,\n    BPopover: BPopover,\n    BInputGroup: BInputGroup,\n    BInputGroupAppend: BInputGroupAppend,\n    FeatherIcon: FeatherIcon,\n    DepositeWindow: DepositeWindow,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent: ToastificationContent\n  },\n  props: {\n    type: {\n      type: Number,\n      required: true\n    },\n    pool: {\n      type: Object,\n      default: function _default() {}\n    },\n    denomTrace: {\n      type: [Array, Object],\n      default: function _default() {\n        return [];\n      }\n    }\n  },\n  data: function data() {\n    return {\n      address: '',\n      amount: '',\n      total: '',\n      slippage: 0.05,\n      marks: [0, 0.01, 0.025, 0.05],\n      balance: {},\n      error: null,\n      chainId: 'osmosis-1',\n      wallet: 'keplr',\n      // base: '',\n      // target: '',\n      dismissSecs: 15,\n      dismissCountDown: 0\n    };\n  },\n  computed: {\n    base: function base() {\n      return getPairName(this.pool, this.denomTrace, 'base');\n    },\n    target: function target() {\n      return getPairName(this.pool, this.denomTrace, 'target');\n    },\n    price: function price() {\n      var p1 = this.$store.state.chains.quotes[this.base];\n      var p2 = this.$store.state.chains.quotes[this.target];\n      return p1 && p2 ? (p1.usd / p2.usd).toFixed(4) : '-';\n    },\n    localPrice: function localPrice() {\n      var p1 = this.$store.state.chains.quotes[this.target];\n      return p1 && this.total > 0 ? (p1.usd * this.total).toFixed(2) : '-';\n    },\n    currentDenom: function currentDenom() {\n      if (this.pool && this.pool.poolAssets) {\n        var mode = this.type === 1 ? 0 : 1;\n        var denom = this.pool.poolAssets[mode].token.denom;\n        return denom;\n      }\n\n      return '';\n    },\n    available: function available() {\n      var _this = this;\n\n      if (this.pool && this.pool.poolAssets) {\n        var amount = 0;\n\n        if (Array.isArray(this.balance)) {\n          this.balance.forEach(function (x) {\n            if (x.denom === _this.currentDenom) {\n              amount = x.amount;\n            }\n          });\n        }\n\n        return formatTokenAmount(amount, 6, this.currentDenom);\n      }\n\n      return 0;\n    },\n    fee: function fee() {\n      var _this$pool, _this$pool$poolParams;\n\n      return percent(((_this$pool = this.pool) === null || _this$pool === void 0 ? void 0 : (_this$pool$poolParams = _this$pool.poolParams) === null || _this$pool$poolParams === void 0 ? void 0 : _this$pool$poolParams.swapFee) || '');\n    }\n  },\n  created: function created() {\n    var _this2 = this;\n\n    this.initialAddress();\n    this.$http.getBankBalances(this.address).then(function (res) {\n      if (res && res.length > 0) {\n        _this2.balance = res;\n      }\n    });\n    this.$http.getAuthAccount(this.address, this.selectedChain).then(function (ret) {\n      if (ret.value.base_vesting_account) {\n        _this2.accountNumber = ret.value.base_vesting_account.base_account.account_number;\n        _this2.sequence = ret.value.base_vesting_account.base_account.sequence;\n        if (!_this2.sequence) _this2.sequence = 0;\n      } else {\n        _this2.accountNumber = ret.value.account_number;\n        _this2.sequence = ret.value.sequence ? ret.value.sequence : 0;\n      }\n    });\n  },\n  methods: {\n    initialAddress: function initialAddress() {\n      var chain = this.$route.params.chain;\n      var accounts = getLocalAccounts();\n      var current = this.$store.state.chains.defaultWallet;\n\n      if (accounts && accounts[current]) {\n        var acc = accounts[current].address.find(function (x) {\n          return x.chain === chain;\n        });\n\n        if (acc) {\n          this.address = acc.addr;\n        }\n      }\n    },\n    formatAvailable: function formatAvailable() {},\n    changeAmount: function changeAmount() {\n      this.total = parseFloat((this.amount * this.price).toFixed(6));\n    },\n    changeTotal: function changeTotal() {\n      this.amount = parseFloat((this.total / this.price).toFixed(6));\n    },\n    sendTx: function sendTx() {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var tokenOutDenom, denom, txMsgs, txFee, signerData;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tokenOutDenom = _this3.pool.poolAssets[_this3.type === 0 ? 0 : 1].token.denom;\n                denom = _this3.pool.poolAssets[_this3.type === 0 ? 1 : 0].token.denom;\n                txMsgs = [{\n                  typeUrl: '/osmosis.gamm.v1beta1.MsgSwapExactAmountIn',\n                  value: {\n                    sender: _this3.address,\n                    routes: [{\n                      poolId: long_1.default.fromString(_this3.pool.id),\n                      tokenOutDenom: tokenOutDenom\n                    }],\n                    tokenIn: {\n                      denom: denom,\n                      amount: long_1.default.fromNumber(parseInt(_this3.amount * 1000000, 10))\n                    },\n                    tokenOutMinAmount: long_1.default.fromNumber(parseInt(_this3.total * 1000000, 10))\n                  }\n                }];\n\n                if (!(txMsgs.length === 0)) {\n                  _context.next = 7;\n                  break;\n                }\n\n                _this3.error = 'No delegation found';\n                _this3.dismissCountDown = _this3.dismissSecs;\n                return _context.abrupt(\"return\", '');\n\n              case 7:\n                if (_this3.accountNumber) {\n                  _context.next = 11;\n                  break;\n                }\n\n                _this3.error = 'Account number should not be empty!';\n                _this3.dismissCountDown = _this3.dismissSecs;\n                return _context.abrupt(\"return\", '');\n\n              case 11:\n                txFee = {\n                  amount: [{\n                    amount: '800',\n                    // this.fee,\n                    denom: 'uomos' // this.feeDenom,\n\n                  }],\n                  gas: '200000' // this.gas,\n\n                };\n                signerData = {\n                  accountNumber: _this3.accountNumber,\n                  sequence: _this3.sequence,\n                  chainId: _this3.chainId\n                };\n                sign(_this3.wallet, _this3.chainId, _this3.address, txMsgs, txFee, 'Sent Via https://explorer.xnode243.xyz', signerData).then(function (bodyBytes) {\n                  _this3.$http.broadcastTx(bodyBytes).then(function (res) {\n                    setLocalTxHistory({\n                      op: 'swap',\n                      hash: res.tx_response.txhash,\n                      time: new Date()\n                    });\n\n                    _this3.$toast({\n                      component: ToastificationContent,\n                      props: {\n                        title: 'Transaction sent!',\n                        icon: 'EditIcon',\n                        variant: 'success'\n                      }\n                    });\n                  }).catch(function (e) {\n                    _this3.error = e;\n                  });\n                }).catch(function (e) {\n                  _this3.error = e;\n                  _this3.dismissCountDown = _this3.dismissSecs;\n                }); // Send tokens\n                // return client.sendTokens(this.address, this.recipient, sendCoins, this.memo)\n\n                return _context.abrupt(\"return\", '');\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    countDownChanged: function countDownChanged(dismissCountDown) {\n      this.dismissCountDown = dismissCountDown;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}