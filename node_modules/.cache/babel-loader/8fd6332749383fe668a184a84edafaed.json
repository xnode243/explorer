{"ast":null,"code":"import compareVersions from 'compare-versions';\nimport StdTx from './stdtx';\nexport default class WrapStdTx {\n  constructor() {\n    this.std = true;\n    this.code = 0;\n    this.txhash = '';\n    this.data = '';\n    this.gas_used = '';\n    this.gas_wanted = '';\n    this.height = 0;\n    this.logs = [];\n    this.timestamp = '';\n    this.tx = new StdTx();\n    this.info = '';\n    this.raw_log = '';\n  }\n\n  static create(element, version = '0.40') {\n    const self = new WrapStdTx();\n\n    if (compareVersions(version, '0.40') < 1) {\n      if (element.txhash) {\n        self.txhash = element.txhash;\n        self.data = element.data;\n        self.gas_used = element.gas_used;\n        self.gas_wanted = element.gas_wanted;\n        self.height = Number(element.height);\n        self.logs = element.logs;\n        self.timestamp = element.timestamp;\n        self.tx = StdTx.create(element.tx);\n      } else {\n        self.std = false;\n        self.raw = element;\n      }\n    } else {\n      self.code = element.tx_response.code;\n      self.txhash = element.tx_response.txhash;\n      self.data = element.tx_response.data;\n      self.gas_used = element.tx_response.gas_used;\n      self.gas_wanted = element.tx_response.gas_wanted;\n      self.height = Number(element.tx_response.height);\n      self.info = element.tx_response.info;\n      self.logs = element.tx_response.logs;\n      self.timestamp = element.tx_response.timestamp;\n      self.tx = StdTx.create(element.tx, version);\n      self.raw_log = element.tx_response.raw_log;\n    }\n\n    self.element = element;\n    return self;\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}