{"ast":null,"code":"import \"core-js/modules/es.number.to-fixed.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { BCard, BCardHeader, BCardTitle, BCardBody, BCardText, BFormRadio, BButton, BButtonGroup, BCol, BRow, BCardFooter, BBadge, VBTooltip, BDropdown, BDropdownItem, BDropdownHeader } from 'bootstrap-vue';\nimport VueApexCharts from 'vue-apexcharts';\nimport { $themeColors } from '@themeConfig';\nimport VuePerfectScrollbar from 'vue-perfect-scrollbar';\nimport FeatherIcon from '../../../@core/components/feather-icon/FeatherIcon.vue';\nexport default {\n  components: {\n    VueApexCharts: VueApexCharts,\n    BCard: BCard,\n    BCardHeader: BCardHeader,\n    BCardText: BCardText,\n    BCardTitle: BCardTitle,\n    BCardBody: BCardBody,\n    BFormRadio: BFormRadio,\n    BButton: BButton,\n    BButtonGroup: BButtonGroup,\n    BCol: BCol,\n    BRow: BRow,\n    BCardFooter: BCardFooter,\n    BBadge: BBadge,\n    BDropdown: BDropdown,\n    BDropdownItem: BDropdownItem,\n    BDropdownHeader: BDropdownHeader,\n    FeatherIcon: FeatherIcon,\n    VuePerfectScrollbar: VuePerfectScrollbar\n  },\n  directives: {\n    'b-tooltip': VBTooltip\n  },\n  data: function data() {\n    return {\n      settings: {\n        maxScrollbarLength: 60\n      },\n      colors: {\n        green: 'success',\n        yellow: 'warning'\n      },\n      coinInfo: {},\n      type: 'prices',\n      days: 30,\n      tickers: [],\n      selectedTicker: {\n        converted_last: {}\n      },\n      marketData: {\n        prices: [],\n        volumes: []\n      },\n      chartOptions: {\n        chart: {\n          toolbar: {\n            show: false\n          },\n          zoom: {\n            enabled: false\n          },\n          type: 'line',\n          dropShadow: {\n            enabled: true,\n            top: 18,\n            left: 2,\n            blur: 5,\n            opacity: 0.2\n          },\n          offsetX: -10\n        },\n        stroke: {\n          curve: 'smooth',\n          width: 4\n        },\n        grid: {\n          borderColor: '#ebe9f1',\n          padding: {\n            top: -20,\n            bottom: 5,\n            left: 20\n          }\n        },\n        legend: {\n          show: false\n        },\n        colors: ['#df87f2'],\n        fill: {\n          type: 'gradient',\n          gradient: {\n            shade: 'dark',\n            inverseColors: false,\n            gradientToColors: [$themeColors.primary],\n            shadeIntensity: 1,\n            type: 'horizontal',\n            opacityFrom: 1,\n            opacityTo: 1,\n            stops: [0, 100, 100, 100]\n          }\n        },\n        markers: {\n          size: 0,\n          hover: {\n            size: 5\n          }\n        },\n        xaxis: {\n          type: 'datetime'\n        },\n        yaxis: {\n          tickAmount: 5,\n          labels: {\n            style: {\n              colors: '#b9b9c3',\n              fontSize: '0.857rem'\n            },\n            formatter: function formatter(val) {\n              if (val > 999999999) {\n                return \"\".concat((val / 1000000000).toFixed(), \"b\");\n              }\n\n              if (val > 999999) {\n                return \"\".concat((val / 1000000).toFixed(), \"m\");\n              }\n\n              if (val > 999) {\n                return \"\".concat((val / 1000).toFixed(), \"k\");\n              }\n\n              if (val > 1) {\n                return parseFloat(val.toFixed(3)).toString();\n              }\n\n              return parseFloat(val.toFixed(6)).toString();\n            }\n          }\n        },\n        tooltip: {\n          x: {\n            show: false\n          }\n        }\n      }\n    };\n  },\n  computed: {\n    series: function series() {\n      return [{\n        name: this.type,\n        data: this.marketData[this.type].map(function (x) {\n          return {\n            x: x[0],\n            y: x[1]\n          };\n        })\n      }];\n    },\n    color: function color() {\n      var _this$selectedTicker;\n\n      return this.colorMap((_this$selectedTicker = this.selectedTicker) === null || _this$selectedTicker === void 0 ? void 0 : _this$selectedTicker.trust_score);\n    },\n    homepage: function homepage() {\n      if (this.coinInfo.links) {\n        return this.coinInfo.links.homepage[0] || '#';\n      }\n\n      return '#';\n    },\n    twitter: function twitter() {\n      if (this.coinInfo.links) {\n        return this.coinInfo.links.twitter_screen_name ? \"https://twitter.com/\".concat(this.coinInfo.links.twitter_screen_name) : '#';\n      }\n\n      return '#';\n    },\n    discord: function discord() {\n      if (this.coinInfo.links) {\n        var discordLink = this.coinInfo.links.chat_url.filter(function (x) {\n          return x.includes('discord');\n        });\n\n        if (discordLink) {\n          return discordLink ? \"\".concat(discordLink) : '#';\n        }\n      }\n\n      return '#';\n    },\n    telegram: function telegram() {\n      if (this.coinInfo.links) {\n        return this.coinInfo.links.telegram_channel_identifier ? \"https://t.me/\".concat(this.coinInfo.links.telegram_channel_identifier) : '#';\n      }\n\n      return '#';\n    },\n    github: function github() {\n      if (this.coinInfo.links) {\n        return this.coinInfo.links.repos_url.github[0] || '#';\n      }\n\n      return '#';\n    }\n  },\n  created: function created() {\n    var _this = this;\n\n    this.$http.getMarketChart(this.days).then(function (res) {\n      _this.marketData = res;\n    }).catch(function () {\n      _this.marketData = null;\n    });\n    this.$http.getCoinInfo().then(function (res) {\n      if (res) {\n        _this.coinInfo = res;\n        _this.tickers = res.tickers;\n\n        if (_this.tickers.length > 0) {\n          // eslint-disable-next-line prefer-destructuring\n          _this.selectedTicker = _this.tickers[0];\n        }\n      }\n    });\n  },\n  methods: {\n    colorMap: function colorMap(v) {\n      return this.colors[v] || 'secondary';\n    },\n    selectChart: function selectChart(v) {\n      this.type = v;\n    },\n    selectDays: function selectDays(v) {\n      var _this2 = this;\n\n      this.days = v;\n      this.$http.getMarketChart(this.days).then(function (res) {\n        _this2.marketData = res;\n      });\n    },\n    selectPair: function selectPair(v) {\n      this.selectedTicker = v;\n    },\n    url: function url(which) {\n      return this.coinInfo[which][0] || '#';\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}