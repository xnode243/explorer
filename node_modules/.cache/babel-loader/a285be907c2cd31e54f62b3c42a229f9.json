{"ast":null,"code":"import _asyncToGenerator from \"/root/explorer/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.string.includes.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/web.url-search-params.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.search.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.number.constructor.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { FormWizard, TabContent } from 'vue-form-wizard';\nimport { ValidationProvider, ValidationObserver } from 'vee-validate';\nimport ToastificationContent from '@core/components/toastification/ToastificationContent.vue'; // import 'vue-form-wizard/dist/vue-form-wizard.min.css'\n\nimport 'vue-form-wizard/dist/vue-form-wizard.min.css';\nimport MetaMaskSigner from '@/libs/client/MetaMaskSigner';\nimport { BAlert, BRow, BCol, BFormGroup, BFormInput, BFormRadio, BFormCheckbox, BAvatar, BInputGroup, BInputGroupPrepend, BFormRadioGroup, VBTooltip, BFormTextarea, BButton } from 'bootstrap-vue';\nimport { required } from '@validations';\nimport { addressDecode, addressEnCode, getLedgerAddress, getLocalAccounts } from '@/libs/utils';\nimport { toHex } from '@cosmjs/encoding';\nimport { stringToPath } from '@cosmjs/crypto';\nexport default {\n  components: {\n    BAlert: BAlert,\n    BButton: BButton,\n    ValidationProvider: ValidationProvider,\n    ValidationObserver: ValidationObserver,\n    FormWizard: FormWizard,\n    TabContent: TabContent,\n    BAvatar: BAvatar,\n    BRow: BRow,\n    BCol: BCol,\n    BFormGroup: BFormGroup,\n    BFormInput: BFormInput,\n    BFormRadio: BFormRadio,\n    BFormCheckbox: BFormCheckbox,\n    BFormTextarea: BFormTextarea,\n    BInputGroup: BInputGroup,\n    BInputGroupPrepend: BInputGroupPrepend,\n    BFormRadioGroup: BFormRadioGroup,\n    // eslint-disable-next-line vue/no-unused-components\n    ToastificationContent: ToastificationContent\n  },\n  directives: {\n    'b-tooltip': VBTooltip\n  },\n  data: function data() {\n    return {\n      debug: '',\n      device: 'keplr',\n      address: '',\n      hdpath: \"m/44'/118/0'/0/0\",\n      name: '',\n      options: {},\n      required: required,\n      selected: [],\n      accounts: null,\n      exludes: [],\n      // HD Path is NOT supported,\n      edit: false,\n      keplr: '',\n      chainId: '',\n      error: null\n    };\n  },\n  computed: {\n    chains: function chains() {\n      var config = JSON.parse(localStorage.getItem('chains'));\n      this.exludes.forEach(function (x) {\n        delete config[x];\n      });\n      return config;\n    },\n    addresses: function addresses() {\n      var _this = this;\n\n      if (this.accounts && this.accounts.address) {\n        var _addressDecode = addressDecode(this.accounts.address),\n            data = _addressDecode.data;\n\n        return this.selected.map(function (x) {\n          if (_this.chains[x]) {\n            var _this$chains$x = _this.chains[x],\n                logo = _this$chains$x.logo,\n                addr_prefix = _this$chains$x.addr_prefix,\n                coin_type = _this$chains$x.coin_type;\n            var addr = addressEnCode(addr_prefix, data, coin_type);\n            return {\n              chain: x,\n              addr: addr,\n              logo: logo,\n              hdpath: _this.hdpath\n            };\n          }\n\n          return null;\n        }).filter(function (x) {\n          return x != null;\n        });\n      }\n\n      return [];\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    var selected = this.$store.state.chains.selected; // this.chain = selected\n\n    this.$http.getLatestBlock().then(function (res) {\n      _this2.chainId = res.block.header.chain_id;\n      _this2.keplr = _this2.initParamsForKeplr(_this2.chainId, selected);\n    });\n\n    if (selected && selected.chain_name && !this.exludes.includes(selected.chain_name)) {\n      this.selected.push(selected.chain_name);\n    }\n\n    var name = new URLSearchParams(window.location.search).get('name');\n    var wallets = getLocalAccounts();\n\n    if (name && wallets && wallets[name]) {\n      var wallet = wallets[name];\n      this.device = wallet.device;\n      this.name = wallet.name;\n      this.edit = true;\n\n      if (wallet.address) {\n        wallet.address.forEach(function (a) {\n          if (!_this2.selected.includes(a.chain)) {\n            _this2.selected.push(a.chain);\n          }\n        });\n        this.address = wallet.address[0].addr;\n        this.hdpath = wallet.address[0].hdpath;\n\n        if (this.localAddress()) {\n          this.$refs.wizard.nextTab();\n        }\n      }\n    } else {\n      this.hdpath = \"m/44'/\".concat(selected.coin_type, \"/0'/0/0\");\n    }\n  },\n  methods: {\n    suggest: function suggest() {\n      var _this3 = this;\n\n      if (window.keplr) {\n        window.keplr.experimentalSuggestChain(JSON.parse(this.keplr)).catch(function (e) {\n          _this3.error = e;\n        });\n      }\n    },\n    initParamsForKeplr: function initParamsForKeplr(chainid, chain) {\n      var gasPriceStep = chain.keplr_price_step || {\n        low: 0.01,\n        average: 0.025,\n        high: 0.03\n      };\n      return JSON.stringify({\n        chainId: chainid,\n        chainName: chain.chain_name,\n        rpc: Array.isArray(chain.rpc) ? chain.rpc[0] : chain.rpc,\n        rest: Array.isArray(chain.api) ? chain.api[0] : chain.api,\n        bip44: {\n          coinType: Number(chain.coin_type)\n        },\n        coinType: Number(chain.coin_type),\n        bech32Config: {\n          bech32PrefixAccAddr: chain.addr_prefix,\n          bech32PrefixAccPub: \"\".concat(chain.addr_prefix, \"pub\"),\n          bech32PrefixValAddr: \"\".concat(chain.addr_prefix, \"valoper\"),\n          bech32PrefixValPub: \"\".concat(chain.addr_prefix, \"valoperpub\"),\n          bech32PrefixConsAddr: \"\".concat(chain.addr_prefix, \"valcons\"),\n          bech32PrefixConsPub: \"\".concat(chain.addr_prefix, \"valconspub\")\n        },\n        currencies: [{\n          coinDenom: chain.assets[0].symbol,\n          coinMinimalDenom: chain.assets[0].base,\n          coinDecimals: Number(chain.assets[0].exponent),\n          coinGeckoId: chain.assets[0].coingecko_id || 'unknown'\n        }],\n        feeCurrencies: [{\n          coinDenom: chain.assets[0].symbol,\n          coinMinimalDenom: chain.assets[0].base,\n          coinDecimals: Number(chain.assets[0].exponent),\n          coinGeckoId: chain.assets[0].coingecko_id || 'unknown',\n          gasPriceStep: gasPriceStep\n        }],\n        gasPriceStep: gasPriceStep,\n        stakeCurrency: {\n          coinDenom: chain.assets[0].symbol,\n          coinMinimalDenom: chain.assets[0].base,\n          coinDecimals: Number(chain.assets[0].exponent),\n          coinGeckoId: chain.assets[0].coingecko_id || 'unknown'\n        },\n        features: chain.keplr_features || []\n      }, null, '\\t');\n    },\n    formatPubkey: function formatPubkey(v) {\n      if (typeof v === 'string') {\n        return v;\n      }\n\n      if (v) {\n        return toHex(v);\n      }\n\n      return '';\n    },\n    connect: function connect() {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var transport;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                transport = _this4.device === 'ledger' ? 'usb' : 'bluetooth';\n                return _context.abrupt(\"return\", getLedgerAddress(transport, _this4.hdpath));\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }))();\n    },\n    cennectKeplr: function cennectKeplr() {\n      var _this5 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        var chainId, offlineSigner;\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!window.getOfflineSigner || !window.keplr)) {\n                  _context2.next = 3;\n                  break;\n                }\n\n                _this5.debug = 'Please install keplr extension';\n                return _context2.abrupt(\"return\", null);\n\n              case 3:\n                _context2.next = 5;\n                return _this5.$http.getLatestBlock().then(function (ret) {\n                  return ret.block.header.chain_id;\n                });\n\n              case 5:\n                chainId = _context2.sent;\n                _context2.next = 8;\n                return window.keplr.enable(chainId);\n\n              case 8:\n                offlineSigner = window.getOfflineSigner(chainId);\n                return _context2.abrupt(\"return\", offlineSigner.getAccounts());\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }))();\n    },\n    connectMetamask: function connectMetamask() {\n      var _this6 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        var signer;\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (window.ethereum) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                _this6.debug = 'Please install Metamask extension';\n                return _context3.abrupt(\"return\", null);\n\n              case 3:\n                signer = MetaMaskSigner.create(stringToPath(_this6.hdpath));\n                return _context3.abrupt(\"return\", signer.getAccounts());\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }))();\n    },\n    localAddress: function localAddress() {\n      if (!this.address) return false;\n\n      try {\n        var _addressDecode2 = addressDecode(this.address),\n            data = _addressDecode2.data;\n\n        if (data) {\n          this.accounts = {\n            address: this.address,\n            pubkey: data\n          };\n          return true;\n        }\n      } catch (e) {\n        this.debug = e;\n      }\n\n      return false;\n    },\n    formSubmitted: function formSubmitted() {\n      var string = localStorage.getItem('accounts');\n      var accounts = string ? JSON.parse(string) : {};\n      accounts[this.name] = {\n        name: this.name,\n        device: this.device,\n        address: this.addresses\n      };\n      localStorage.setItem('accounts', JSON.stringify(accounts));\n\n      if (!this.$store.state.chains.defaultWallet) {\n        this.$store.commit('setDefaultWallet', this.name);\n      }\n\n      this.$toast({\n        component: ToastificationContent,\n        props: {\n          title: 'Address Saved!',\n          icon: 'EditIcon',\n          variant: 'success'\n        }\n      });\n      this.$router.push('./accounts');\n    },\n    validationFormDevice: function validationFormDevice() {\n      var _this7 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {\n        var ok;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                ok = String(_this7.name).length > 0;\n\n                if (ok) {\n                  _context4.next = 15;\n                  break;\n                }\n\n                _context4.t0 = _this7.device;\n                _context4.next = _context4.t0 === 'keplr' ? 5 : _context4.t0 === 'metamask' ? 8 : _context4.t0 === 'ledger' ? 11 : _context4.t0 === 'ledger2' ? 11 : 14;\n                break;\n\n              case 5:\n                _context4.next = 7;\n                return _this7.cennectKeplr().then(function (accounts) {\n                  if (accounts) {\n                    // eslint-disable-next-line prefer-destructuring\n                    _this7.accounts = accounts[0];\n                    ok = true;\n                  }\n                });\n\n              case 7:\n                return _context4.abrupt(\"break\", 15);\n\n              case 8:\n                _context4.next = 10;\n                return _this7.connectMetamask().then(function (accounts) {\n                  if (accounts) {\n                    // eslint-disable-next-line prefer-destructuring\n                    _this7.accounts = accounts[0];\n                    ok = true;\n                  }\n                }).catch(function (e) {\n                  _this7.debug = e;\n                });\n\n              case 10:\n                return _context4.abrupt(\"break\", 15);\n\n              case 11:\n                _context4.next = 13;\n                return _this7.connect().then(function (accounts) {\n                  if (accounts) {\n                    // eslint-disable-next-line prefer-destructuring\n                    _this7.accounts = accounts[0];\n                    ok = true;\n                  }\n                }).catch(function (e) {\n                  _this7.debug = e;\n                });\n\n              case 13:\n                return _context4.abrupt(\"break\", 15);\n\n              case 14:\n                ok = _this7.localAddress();\n\n              case 15:\n                return _context4.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  _this7.$refs.deviceRules.validate().then(function (success) {\n                    if (ok && success) {\n                      resolve(true);\n                    }\n\n                    reject();\n                  });\n                }));\n\n              case 16:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }))();\n    },\n    validationFormAddress: function validationFormAddress() {\n      var _this8 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this8.$refs.accountRules.validate().then(function (success) {\n          if (success) {\n            resolve(true);\n          } else {\n            reject();\n          }\n        });\n      });\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}