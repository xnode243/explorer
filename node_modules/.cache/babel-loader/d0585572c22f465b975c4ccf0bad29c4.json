{"ast":null,"code":"import { isToday } from './utils';\nexport const kFormatter = num => num > 999 ? `${(num / 1000).toFixed(1)}k` : num;\nexport const title = (value, replacer = ' ') => {\n  if (!value) return '';\n  const str = value.toString();\n  const arr = str.split(replacer);\n  const capitalizedArray = [];\n  arr.forEach(word => {\n    const capitalized = word.charAt(0).toUpperCase() + word.slice(1);\n    capitalizedArray.push(capitalized);\n  });\n  return capitalizedArray.join(' ');\n};\nexport const avatarText = value => {\n  if (!value) return '';\n  const nameArray = value.split(' ');\n  return nameArray.map(word => word.charAt(0).toUpperCase()).join('');\n};\n/**\n * Format and return date in Humanize format\n * Intl docs: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/format\n * Intl Constructor: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Intl/DateTimeFormat/DateTimeFormat\n * @param {String} value date to format\n * @param {Object} formatting Intl object to format with\n */\n\nexport const formatDate = (value, formatting = {\n  month: 'short',\n  day: 'numeric',\n  year: 'numeric'\n}) => {\n  if (!value) return value;\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value));\n};\n/**\n * Return short human friendly month representation of date\n * Can also convert date to only time if date is of today (Better UX)\n * @param {String} value date to format\n * @param {Boolean} toTimeForCurrentDay Shall convert to time if day is today/current\n */\n\nexport const formatDateToMonthShort = (value, toTimeForCurrentDay = true) => {\n  const date = new Date(value);\n  let formatting = {\n    month: 'short',\n    day: 'numeric'\n  };\n\n  if (toTimeForCurrentDay && isToday(date)) {\n    formatting = {\n      hour: 'numeric',\n      minute: 'numeric'\n    };\n  }\n\n  return new Intl.DateTimeFormat('en-US', formatting).format(new Date(value));\n}; // Strip all the tags from markup and return plain text\n\nexport const filterTags = value => value.replace(/<\\/?[^>]+(>|$)/g, '');","map":null,"metadata":{},"sourceType":"module"}