import n from"vue";var t=n.extend({name:"Can",functional:!0,props:{I:String,do:String,a:[String,Function],an:[String,Function],this:[String,Function,Object],on:[String,Function,Object],not:Boolean,passThrough:Boolean,field:String},render(n,{props:t,children:e,parent:i,data:r}){const o=t,[a,s]=(o.I||o.do||"").split(" "),c=o.of||o.an||o.a||o.this||o.on;if(!a)throw new Error("[Vue Can]: neither `I` nor `do` prop was passed in <Can>");const u=i.$can(a,c,s),p=t.not?!u:u;if(!t.passThrough)return p?e:[];if(!r.scopedSlots||!r.scopedSlots.default)throw new Error("[Vue Can]: `passThrough` expects default scoped slot to be specified");return r.scopedSlots.default({allowed:p,ability:i.$ability})}});const e=new WeakMap;function i(n,t){var i;Object.defineProperty(n.prototype,"$ability",(i=t)?{value:i}:{get(){throw new Error("Please provide `Ability` instance either in `abilitiesPlugin` or in ComponentOptions")}}),n.mixin({beforeCreate(){const{ability:n,parent:t}=this.$options,e=n||(t?t.$ability:null);e&&Object.defineProperty(this,"$ability",{value:e})},methods:{$can(...t){const i=function(n,t){if(e.has(t))return e.get(t);const i={t:!0},r="function"==typeof n.observable?n.observable(i):new n({data:i});return t.on("updated",()=>{r.t=!r.t}),e.set(t,r),r}(n,this.$ability);return i.t=i.t,this.$ability.can(...t)}}})}export{t as Can,i as abilitiesPlugin};
//# sourceMappingURL=index.js.map
