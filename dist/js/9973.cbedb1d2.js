"use strict";(self["webpackChunkping_wallet"]=self["webpackChunkping_wallet"]||[]).push([[9973],{29973:function(t,e,s){s.r(e),s.d(e,{default:function(){return u}});var a=function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"container-md"},[s("b-card",[s("b-card-title",[t._v(" What's State Sync? ")]),t._v(" The Tendermint Core 0.34 release includes support for state sync, which allows a new node to join a network by fetching a snapshot of the application state at a recent height instead of fetching and replaying all historical blocks. This can reduce the time needed to sync with the network from days to minutes. Click "),s("a",{attrs:{href:"https://blog.cosmos.network/cosmos-sdk-state-sync-guide-99e4cf43be2f"}},[t._v("here")]),t._v(" for more infomation. ")],1),s("b-card",[s("b-card-title",[t._v(" Starting New Node From State Sync ")]),s("b",{staticClass:"mt-1"},[t._v("1. Install Binary (Version: "+t._s(t.app_version)+")")]),s("br"),t._v(" We need to install the binary first and make sure that the version is the one currently in use on mainnet. "),s("br"),s("br"),s("b",{staticClass:"mt-1"},[t._v("2. Enable State Sync")]),s("br"),t._v(" We can configure Tendermint to use state sync in "),s("code",[t._v("$DAEMON_HOME/config/config.toml")]),t._v(". "),s("ul",{staticClass:"mt-1"},t._l(t.error,(function(e){return s("li",{key:e,staticClass:"text-danger"},[t._v(" "+t._s(e)+" ")])})),0),s("b-form-textarea",{staticClass:"my-1",attrs:{id:"textarea-state",state:t.valid,readonly:"",placeholder:"Loading...",rows:"7"},on:{change:function(e){return t.check()}},model:{value:t.state,callback:function(e){t.state=e},expression:"state"}}),s("b",{staticClass:"mt-1"},[t._v("3. Start the daemon: "),t.daemon?s("span",[s("code",[t._v(t._s(t.daemon)+" start")])]):t._e()]),s("br"),t._v(" If you are resetting node, run "),s("code",[t._v(t._s(t.daemon)+" unsafe-reset-all")]),t._v(" or "),s("code",[t._v(t._s(t.daemon)+" tendermint unsafe-reset-all --home ~/.HOME")]),t._v(" before you start the daemon. ")],1),s("b-card",[s("b-card-title",[t._v(" Enable Snapshot For State Sync ")]),t._v(" To make state sync works, we can enable snapshot in "),s("code",[t._v("$DAEMON_HOME/config/app.toml")]),s("b-form-textarea",{staticClass:"mt-1",attrs:{id:"snapshot",readonly:"",rows:"8"},model:{value:t.snapshot,callback:function(e){t.snapshot=e},expression:"snapshot"}})],1)],1)},n=[],r=s(8775),o=s(49379),i=s(333),h=s(28972),c={components:{BCard:r._,BCardTitle:o._,BFormTextarea:i.y},data(){const{rpc:t,snapshot_provider:e}=this.$store.state.chains.selected;let s="";if(t&&Array.isArray(t)&&t.length>0){let e=t;1===e.length&&(e=e.concat(e)),s=e.map((t=>{const e=new URL(t);return""===e.port?`${e.protocol}//${e.hostname}:${e.protocol.startsWith("https")?"443":"80"}`:`${e.protocol}//${e.hostname}:${e.port}`})).join(",")}const a=e,n=a?`# Comma separated list of nodes to keep persistent connections to \npersistent_peers = "${a}" `:"OMG！ There is NO available providers, but you can try it.";return{app_version:"",snapshot_provider:e,servers:s,providers:n,height:0,hash:"",error:[],state:"",valid:!1,daemon:"",snapshot:"[state-sync]\n# snapshot-interval specifies the block interval at which local state sync snapshots are\n# taken (0 to disable). Must be a multiple of pruning-keep-every.\nsnapshot-interval = 1000\n\n# snapshot-keep-recent specifies the number of recent snapshots to keep and serve (0 to keep all). Each snapshot is about 500MiB\nsnapshot-keep-recent = 2"}},created(){const t=1e3;this.$http.getLatestBlock().then((e=>{const{height:s}=e.block.header;s>3*t&&this.$http.getBlockByHeight(Math.trunc((s-3*t)/t)*t).then((t=>{this.hash=(0,h.toHex)((0,h.fromBase64)(t.block_id.hash)),this.height=t.block.header.height,this.state=`[statesync]\nenable = true\nrpc_servers = "${this.servers}"\ntrust_height = ${this.height}\ntrust_hash = "${this.hash}"\ntrust_period = "168h"  # 2/3 of unbonding time`,this.check()})),this.$http.getNodeInfo().then((t=>{this.app_version=t.application_version.version,this.daemon=t.application_version.app_name})).catch()}))},methods:{check(){return this.valid=!0,this.error=[],this.state.split("\n").forEach((t=>{const e=this.kv(t);"trust_height"===e[0]&&Number(e[1])<1&&(this.valid=!1,this.error.push("Trust Height should be set.")),"trust_hash"===e[0]&&e[1].length<10&&(this.valid=!1,this.error.push("Trust Hash is invalid.")),"rpc_servers"===e[0]&&(e[1].indexOf(",")>1?e[1].replace(/"/g,"").split(",").forEach((t=>{const e=/^(.)+:\d+$/g;e.test(t)||(this.valid=!1,this.error.push(`"${t}" is not a valid host. Make sure that the port is added.`))})):(this.valid=!1,this.error.push("No RPC serser is configured.")))})),this.valid},kv(t){if(t&&t.indexOf("=")>0){const e=t.split("=");return[e[0].trim(),e[1].trim()]}return[]}}},l=c,p=s(1001),d=(0,p.Z)(l,a,n,!1,null,null,null),u=d.exports}}]);