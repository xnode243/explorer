"use strict";(self["webpackChunkping_wallet"]=self["webpackChunkping_wallet"]||[]).push([[7219],{67219:function(t,s,e){e.r(s),e.d(s,{default:function(){return w}});var i=function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"container-md px-0"},[t.chainVals?e("b-row",t._l(Object.keys(t.chainVals),(function(s,i){return e("b-col",{key:i,staticClass:"text-truncate",attrs:{sm:"12",md:"4"}},[e("uptime-my-chain-blocks",{attrs:{chain:s,validators:t.chainVals[s]}})],1)})),1):t._e(),e("b-alert",{staticClass:"mt-2",attrs:{variant:"success",show:""}},[e("div",{staticClass:"alert-heading"},[t._v(" Tips ")]),e("div",{staticClass:"alert-body"},[t._v(" There are two ways to monitor your validators: "),e("li",[t._v(" Pin a validator on Uptime pages.")]),e("li",[t._v(" Specify parameters like following: "),e("pre",[t._v('https://ping.pub/cosmos/uptime/my?validators={"sifchain":["FBADE9A30473BB9ED6DFA16BFB3838E028F33650"],"chain_name":["hexAddress"]}')])])])])],1)},a=[],o=e(26253),n=e(50725),r=e(73106),c=e(5870),l=e(54333),h=e(28972),d=function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"px-0"},[e("b-card",[e("b-card-title",{staticClass:"d-flex justify-content-between"},[e("span",{staticClass:"text-uppercase"},[t._v(" "+t._s(t.chain)+" ")]),e("small",{staticClass:"text-right"},[t._v(" Height: "+t._s(t.height)+" ")])]),e("b-alert",{attrs:{variant:"danger",show:t.syncing}},[e("div",{staticClass:"alert-body"},[e("span",[t._v("No new blocks have been produced since "),e("strong",[t._v(t._s(t.latestTime))])])])]),e("b-row",[0===t.uptime.length?e("span",{staticClass:"text-danger"},[t._v(" Your node is out of active validator set")]):t._e(),t._l(t.uptime,(function(s,i){return e("b-col",{key:i,staticClass:"text-truncate",attrs:{sm:"12"}},[e("div",{staticClass:"d-flex justify-content-between"},[e("b-form-checkbox",{staticClass:"custom-control-warning",attrs:{value:t.chain+"#"+s.address},on:{change:function(e){return t.pinValidator(t.chain+"#"+s.address)}},model:{value:t.pinned,callback:function(s){t.pinned=s},expression:"pinned"}},[e("span",{staticClass:"d-inline-block text-truncate font-weight-bold align-bottom"},[t._v(" "+t._s(s.validator.moniker)+" ")])]),t.missing[s.address]?e("span",[t.missing[s.address].missed_blocks_counter>0?e("b-badge",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover.v-danger",modifiers:{hover:!0,"v-danger":!0}}],staticClass:"text-danger text-bolder",attrs:{variant:"light-danger",title:t.missing[s.address].missed_blocks_counter+" missed blocks"}},[t._v(" "+t._s(t.missing[s.address].missed_blocks_counter)+" ")]):e("b-badge",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover.v-success",modifiers:{hover:!0,"v-success":!0}}],attrs:{variant:"light-success",title:"Perfect! No missed blocks"}},[t._v(" 0 ")])],1):t._e()],1),e("div",{staticClass:"d-flex justify-content-between align-self-stretch flex-wrap"},t._l(t.blocks,(function(i,a){return e("div",{key:a,staticStyle:{width:"1.5%"}},[e("router-link",{attrs:{to:"./blocks/"+i.height}},[e("div",{directives:[{name:"b-tooltip",rawName:"v-b-tooltip.hover.v-second",modifiers:{hover:!0,"v-second":!0}}],staticClass:"m-auto",class:i.sigs&&i.sigs[s.address]?i.sigs[s.address]:"bg-light-success",attrs:{title:i.height}},[t._v("Â ")])])],1)})),0)])}))],2)],1)],1)},g=[],u=e(26034),m=e(8775),p=e(49379),b=e(65098),v={name:"Blocks",components:{BBadge:u.k,BRow:o.T,BCol:n.l,BCard:m._,BAlert:r.F,BCardTitle:p._,BFormCheckbox:b.l},directives:{"b-tooltip":c.o},props:{chain:{type:String,default:null},validators:{type:Array,default:()=>[]}},data(){const t=(0,l.getLocalChains)(),s=localStorage.getItem("pinned")?localStorage.getItem("pinned").split(","):"";return{pinned:s,config:t[this.chain],missing:{},blocks:Array.from("0".repeat(50)).map((t=>({sigs:{},height:Number(t)}))),syncing:!1,latestTime:"",height:"-"}},computed:{uptime(){const t=this.validators;return t}},created(){this.initBlocks(),this.$http.getSlashingSigningInfo(this.config).then((t=>{t.info&&t.info.forEach((t=>{if(t.address){const s=(0,h.toBase64)((0,h.fromBech32)(t.address).data);this.missing[s]=t}}))}))},beforeDestroy(){this.blocks=[],this.syncing=!1,clearInterval(this.timer)},methods:{pinValidator(){localStorage.setItem("pinned",this.pinned)},initBlocks(){this.$http.getLatestBlock(this.config).then((t=>{const{height:s}=t.block.last_commit;this.height=s,(0,l.timeIn)(t.block.header.time,3,"m")?this.syncing=!0:this.syncing=!1,this.latestTime=(0,l.toDay)(t.block.header.time,"long");const e=[];let i=Promise.resolve();for(let o=s-1;o>s-50;o-=1)e.unshift({sigs:{},height:o>0?o:0}),o>s-48&&o>0&&(i=i.then((()=>new Promise((t=>{this.fetch_status(o,t)})))));const a=this.initColor();t.block.last_commit.signatures.forEach((t=>{t.validator_address&&(a[t.validator_address]="bg-success")})),e.push({sigs:a,height:s}),this.blocks=e,this.timer=setInterval(this.fetch_latest,6e3)}))},initColor(){const t={};return this.validators.forEach((s=>{t[s.address]="bg-danger"})),t},fetch_status(t,s){const e=this.blocks.find((s=>s.height===t));e&&this.$http.getBlockByHeight(t,this.config).then((t=>{s();const i=this.initColor();t.block.last_commit.signatures.forEach((t=>{t.validator_address&&(i[t.validator_address]="bg-success")})),this.$set(e,"sigs",i)}))},fetch_latest(){this.$http.getLatestBlock(this.config).then((t=>{const s=this.initColor();t.block.last_commit.signatures.forEach((t=>{t.validator_address&&(s[t.validator_address]="bg-success")})),this.height=t.block.last_commit.height;const e=this.blocks.find((s=>s.height===t.block.last_commit.height));"undefined"===typeof e&&(this.blocks.length>=50&&this.blocks.shift(),this.blocks.push({sigs:s,height:t.block.last_commit.height}))}))}}},f=v,_=e(1001),k=(0,_.Z)(f,d,g,!1,null,null,null),y=k.exports,C={components:{BRow:o.T,BCol:n.l,BAlert:r.F,UptimeMyChainBlocks:y},directives:{"b-tooltip":c.o},data(){let t=(localStorage.getItem("pinned")||"").split(",").map((t=>t.split("#"))).reduce(((t,s)=>{const e=t;return e[s[0]]?e[s[0]].push(s[1]):e[s[0]]=[s[1]],e}),{});this.$route.query.validators&&(t=JSON.parse(this.$route.query.validators));const s={};if(t){const e=(0,l.getLocalChains)();Object.keys(t).forEach((i=>{const a=JSON.parse((0,l.getCachedValidators)(i));if(a){const e=[];t[i].forEach((t=>{const s=a.find((s=>t===this.hex2base64((0,l.consensusPubkeyToHexAddress)(s.consensus_pubkey))));s&&e.push({address:t,validator:s.description})})),s[i]=e}else this.$http.getValidatorList(e[i]).then((s=>{const e=[];t[i].forEach((t=>{const i=s.find((s=>t===this.hex2base64((0,l.consensusPubkeyToHexAddress)(s.consensus_pubkey))));i&&e.push({address:t,validator:i.description})})),this.$set(this.chainVals,i,e)}))}))}return{chainVals:s}},methods:{hex2base64(t){return(0,h.toBase64)((0,h.fromHex)(t))}}},B=C,x=(0,_.Z)(B,i,a,!1,null,null,null),w=x.exports}}]);